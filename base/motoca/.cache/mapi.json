{
    "title": "@motoca: Crian\u00e7as andando de motoca",
    "description": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>@motoca: Crian\u00e7as andando de motoca</title>\n    <style>\n        body { font-family: sans-serif; line-height: 1.6; margin: 20px; }\n        pre { background-color: #f4f4f4; padding: 10px; border-radius: 5px; overflow-x: auto; }\n        code { font-family: monospace; }\n        table { border-collapse: collapse; width: 100%; }\n        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n        th { background-color: #f2f2f2; }\n        /* Estilos b\u00e1sicos para o destaque de sintaxe (gerado pelo pygments via pymdownx.highlight) */\n        .highlight .hll { background-color: #ffffcc }\n        .highlight .c { color: #999988; font-style: italic } /* Comment */\n        .highlight .err { color: #a61717; background-color: #e3d2d2 } /* Error */\n        .highlight .k { color: #000000; font-weight: bold } /* Keyword */\n        .highlight .o { color: #000000; font-weight: bold } /* Operator */\n        .highlight .ch { color: #999988; font-style: italic } /* Comment.Hashbang */\n        .highlight .cm { color: #999988; font-style: italic } /* Comment.Multiline */\n        .highlight .cp { color: #999999; font-weight: bold; font-style: italic } /* Comment.Preproc */\n        .highlight .cpf { color: #999988; font-style: italic } /* Comment.PreprocFile */\n        .highlight .c1 { color: #999988; font-style: italic } /* Comment.Single */\n        .highlight .cs { color: #999999; font-weight: bold; font-style: italic } /* Comment.Special */\n        .highlight .gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */\n        .highlight .ge { color: #000000; font-style: italic } /* Generic.Emph */\n        .highlight .gr { color: #aa0000 } /* Generic.Error */\n        .highlight .gh { color: #999999 } /* Generic.Heading */\n        .highlight .gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */\n        .highlight .go { color: #888888 } /* Generic.Output */\n        .highlight .gp { color: #555555 } /* Generic.Prompt */\n        .highlight .gs { font-weight: bold } /* Generic.Strong */\n        .highlight .gu { color: #aaaaaa } /* Generic.Subheading */\n        .highlight .gt { color: #aa0000 } /* Generic.Traceback */\n        .highlight .kc { color: #000000; font-weight: bold } /* Keyword.Constant */\n        .highlight .kd { color: #000000; font-weight: bold } /* Keyword.Declaration */\n        .highlight .kn { color: #000000; font-weight: bold } /* Keyword.Namespace */\n        .highlight .kp { color: #000000; font-weight: bold } /* Keyword.Pseudo */\n        .highlight .kr { color: #000000; font-weight: bold } /* Keyword.Reserved */\n        .highlight .kt { color: #445588; font-weight: bold } /* Keyword.Type */\n        .highlight .m { color: #009999 } /* Literal.Number */\n        .highlight .s { color: #dd1144 } /* Literal.String */\n        .highlight .na { color: #008080 } /* Name.Attribute */\n        .highlight .nb { color: #0086B3 } /* Name.Builtin */\n        .highlight .nc { color: #445588; font-weight: bold } /* Name.Class */\n        .highlight .no { color: #008080 } /* Name.Constant */\n        .highlight .nd { color: #3c5d5d; font-weight: bold } /* Name.Decorator */\n        .highlight .ni { color: #800080 } /* Name.Entity */\n        .highlight .ne { color: #990000; font-weight: bold } /* Name.Exception */\n        .highlight .nf { color: #990000; font-weight: bold } /* Name.Function */\n        .highlight .nl { color: #990000; font-weight: bold } /* Name.Label */\n        .highlight .nn { color: #555555; font-weight: bold } /* Name.Namespace */\n        .highlight .nx { color: #990000; font-weight: bold } /* Name.Other */\n        .highlight .py { color: #009999 } /* Name.Property */\n        .highlight .p { color: #000000 } /* Name.Punctuation */\n        .highlight .nv { color: #008080 } /* Name.Variable */\n        .highlight .ow { color: #000000; font-weight: bold } /* Operator.Word */\n        .highlight .w { color: #bbbbbb } /* Text.Whitespace */\n        .highlight .mf { color: #009999 } /* Literal.Number.Float */\n        .highlight .mh { color: #009999 } /* Literal.Number.Hex */\n        .highlight .mi { color: #009999 } /* Literal.Number.Integer */\n        .highlight .mo { color: #009999 } /* Literal.Number.Oct */\n        .highlight .sb { color: #dd1144 } /* Literal.String.Backtick */\n        .highlight .sc { color: #dd1144 } /* Literal.String.Char */\n        .highlight .sd { color: #dd1144 } /* Literal.String.Doc */\n        .highlight .s2 { color: #dd1144 } /* Literal.String.Double */\n        .highlight .se { color: #dd1144 } /* Literal.String.Escape */\n        .highlight .sh { color: #dd1144 } /* Literal.String.Heredoc */\n        .highlight .si { color: #dd1144 } /* Literal.String.Interpol */\n        .highlight .sx { color: #dd1144 } /* Literal.String.Other */\n        .highlight .sr { color: #009926 } /* Literal.String.Regex */\n        .highlight .s1 { color: #dd1144 } /* Literal.String.Single */\n        .highlight .ss { color: #dd1144 } /* Literal.String.Symbol */\n        .highlight .bp { color: #0086B3 } /* Name.Builtin.Pseudo */\n        .highlight .vc { color: #008080 } /* Name.Variable.Class */\n        .highlight .vg { color: #008080 } /* Name.Variable.Global */\n        .highlight .vi { color: #008080 } /* Name.Variable.Instance */\n        .highlight .il { color: #009999 } /* Literal.Number.Integer.Long */\n    </style>\n    <script type=\"text/javascript\" async\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML\">\n    </script>\n</head>\n<body>\n<h1>Crian\u00e7as andando de motoca</h1>\n<!-- toch -->\n<table>\n<thead>\n<tr>\n<th><a href=\"#intro\">Intro</a></th>\n<th><a href=\"#guide\">Guide</a></th>\n<th><a href=\"#shell\">Shell</a></th>\n<th><a href=\"#draft\">Draft</a></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<!-- toch -->\n\n<p><img alt=\"cover\" src=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/motoca/cover.jpg\" /></p>\n<h2>Intro</h2>\n<p>Este \u00e9 um projeto de modelagem e implementa\u00e7\u00e3o de uma motoca motorizada em um parque. A ideia \u00e9 simular o funcionamento dessa motoca atrav\u00e9s de classes em um programa. Para isso, ser\u00e3o implementadas duas classes principais: <code>Pessoa</code> e <code>Moto</code>.</p>\n<ul>\n<li>Descri\u00e7\u00e3o<ul>\n<li>A classe <code>Moto</code> representa a motoca em si. Ela possui atributos como pot\u00eancia, tempo e a pessoa que est\u00e1 atualmente utilizando-a.</li>\n<li>A motoca inicia com pot\u00eancia 1, sem minutos e sem ningu\u00e9m.</li>\n<li>Apenas uma pessoa pode estar na motoca por vez.</li>\n<li>As funcionalidades principais da motoca incluem subir uma pessoa, descer uma pessoa, comprar tempo, dirigir por um tempo determinado e buzinar.</li>\n<li>A classe <code>Pessoa</code> representa os usu\u00e1rios da motoca. Ela possui os atributos nome e idade.</li>\n</ul>\n</li>\n<li>Comandos<ul>\n<li>Todos os comandos seguem o modelo <code>$comando arg1 arg2 ...</code>. Em caso de erro, uma mensagem adequada deve ser impressa.</li>\n<li><code>$show</code> - Mostra o estado atual da motoca, incluindo pot\u00eancia, tempo e pessoa atualmente na motoca.<ul>\n<li><code>f\"power:{this.power}, time:{this.time}, person:{this.person}\"</code></li>\n<li>power:1, time:0, person:(marcos:4)</li>\n</ul>\n</li>\n<li><code>$init</code> - Reinicia a motoca para o estado inicial, com pot\u00eancia 1, sem minutos e sem ningu\u00e9m.</li>\n<li><code>$enter</code> - Permite uma pessoa subir na motoca. Deve ser seguido pelos argumentos <code>nome</code> e <code>idade</code> da pessoa.</li>\n<li><code>$leave</code> - Faz a pessoa atualmente na motoca descer.</li>\n<li><code>$buy</code> - Permite comprar tempo em minutos para utilizar a motoca. O tempo recebido \u00e9 incrementado ao tempo atual.</li>\n<li><code>$drive</code> - Permite dirigir a motoca por um tempo determinado.</li>\n<li><code>$honk</code> - Permite buzinar a motoca.</li>\n</ul>\n</li>\n</ul>\n<h2>Guide</h2>\n<p><img alt=\"diagrama\" src=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/motoca/diagrama.png\" /></p>\n<p><a href=\"https://youtu.be/6tYINNbLQeM?si=GkcP6dgnBcnzWhCw\"><img alt=\"youtube icon\" src=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/motoca/../yousolver.png\" /></a></p>\n<ul>\n<li>Classe Pessoa<ul>\n<li>Crie a classe <code>Pessoa</code> com os atributos <code>age</code> e <code>name</code>.</li>\n<li>Defina os atributos como privados.</li>\n<li>Crie o construtor da classe que recebe <code>name</code> como uma string e <code>age</code> como um n\u00famero.</li>\n<li>Crie os m\u00e9todos <code>getAge()</code> e <code>getName()</code> para retornar a idade e o nome da pessoa, respectivamente.</li>\n<li>Crie o m\u00e9todo <code>toString()</code> para retornar uma string no formato \"nome:idade\".</li>\n</ul>\n</li>\n<li>Parte 1: Inserir<ul>\n<li>Crie a classe <code>Motoca</code> com os atributos <code>potencia</code>, <code>time</code> e <code>pessoa</code>.</li>\n<li>Inicialize os atributos no construtor, onde <code>potencia</code> inicia com 1, <code>time</code> inicia com 0 e <code>pessoa</code> inicia como nulo.</li>\n<li>Crie o m\u00e9todo <code>inserir(pessoa: Pessoa): bool</code> que permite inserir uma pessoa na motoca.</li>\n<li>Verifique se h\u00e1 uma pessoa na motoca. Se houver, imprima \"fail: busy motorcycle\" e retorne falso.</li>\n<li>Caso contr\u00e1rio, insira a pessoa na motoca e retorne verdadeiro.</li>\n<li>Crie o m\u00e9todo <code>toString()</code> para mostrar o estado da motoca.</li>\n</ul>\n</li>\n<li>Parte 2: Remover<ul>\n<li>Crie o m\u00e9todo <code>remover(): Pessoa | null</code> que permite remover a pessoa da motoca.</li>\n<li>Verifique se h\u00e1 uma pessoa na motoca. Se n\u00e3o houver, imprima \"fail: empty motorcycle\" e retorne nulo.</li>\n<li>Caso contr\u00e1rio, remova a pessoa da motoca e retorne a pessoa removida.</li>\n</ul>\n</li>\n<li>Parte 3: Comprar Tempo<ul>\n<li>Crie o m\u00e9todo <code>buyTime(time: number)</code> que permite comprar tempo em minutos para utilizar a motoca.</li>\n<li>Incremente o tempo da motoca com o tempo passado como par\u00e2metro.</li>\n</ul>\n</li>\n<li>Parte 4: Dirigir<ul>\n<li>Crie o m\u00e9todo <code>drive(time: number)</code> que permite dirigir a motoca por um tempo determinado.</li>\n<li>Verifique se h\u00e1 tempo dispon\u00edvel na motoca. Se n\u00e3o houver, imprima \"fail: buy time first\".</li>\n<li>Verifique se h\u00e1 uma pessoa na motoca. Se n\u00e3o houver, imprima \"fail: empty motorcycle\".</li>\n<li>Verifique se a idade da pessoa na motoca \u00e9 maior que 10 anos. Se for, imprima \"fail: too old to drive\".</li>\n<li>Calcule o novo tempo ap\u00f3s dirigir. Se o novo tempo for menor ou igual a 0, imprima \"fail: time finished after X minutes\".</li>\n<li>Atualize o tempo da motoca.</li>\n</ul>\n</li>\n<li>Parte 5: Buzinar<ul>\n<li>Crie o m\u00e9todo <code>honk()</code> que permite buzinar a motoca.</li>\n<li>Construa a string da buzina, onde o n\u00famero de \"e\" \u00e9 igual \u00e0 pot\u00eancia da motoca.</li>\n<li>Retorne a buzina.</li>\n</ul>\n</li>\n</ul>\n<hr />\n<ul>\n<li>Cada linguagem tem suas formas de definir aus\u00eancia de valor.</li>\n<li>\n<p>Por exemplo, vamos criar uma vari\u00e1vel que pode ser um inteiro ou n\u00e3o ter valor.</p>\n</li>\n<li>\n<p>Python</p>\n<ul>\n<li><code>null</code> \u00e9 o valor padr\u00e3o para aus\u00eancia de valor.</li>\n<li><code>variavel: int | null = null</code> - Define uma vari\u00e1vel que pode ser <code>int</code> ou <code>null</code>.</li>\n<li><code>variavel = 5</code> - Define a vari\u00e1vel com um valor inteiro.</li>\n<li>Teste: <code>if variavel is not null:</code></li>\n</ul>\n</li>\n<li>Java<ul>\n<li><code>null</code> \u00e9 o valor padr\u00e3o para aus\u00eancia de valor.</li>\n<li>Tipos primitivos n\u00e3o podem ser null.</li>\n<li>Todos as refer\u00eancias a objetos podem ser null.</li>\n<li>Refer\u00eancias n\u00e3o inicializadas s\u00e3o null.</li>\n<li><code>Integer variavel = null</code> - Define uma vari\u00e1vel que pode ser <code>Integer</code> ou <code>null</code>.</li>\n<li><code>variavel = 5</code> - Define a vari\u00e1vel com um valor inteiro.</li>\n<li>Teste: <code>if (variavel != null) {</code></li>\n</ul>\n</li>\n<li>C++<ul>\n<li><code>nullptr</code> \u00e9 o valor padr\u00e3o para aus\u00eancia de valor.</li>\n<li>Apenas ponteiros podem ser nullptr.</li>\n<li>Valores est\u00e1ticos n\u00e3o podem ser nullptr.</li>\n<li>Op\u00e7\u00f5es de abordagem com ponteiros:<ul>\n<li><code>int* variavel = nullptr</code> - Define um ponteiro que pode ser <code>int</code> ou <code>nullptr</code>.</li>\n<li><code>std::shared_ptr&lt;int&gt; variavel = nullptr</code> - Define um ponteiro que pode ser <code>int</code> ou <code>nullptr</code>.</li>\n<li><code>variavel = new int(5)</code> - Define a vari\u00e1vel com um valor inteiro.</li>\n<li>Teste: <code>if (variavel != nullptr) {</code></li>\n</ul>\n</li>\n<li>Op\u00e7\u00f5es de abordagem est\u00e1tica utilizando wrapper(empacotador).<ul>\n<li><code>std::optional&lt;int&gt; variavel = std::nullopt</code> - Define uma vari\u00e1vel que pode ser <code>int</code> ou <code>std::nullopt</code>.</li>\n<li><code>variavel = 5</code> - Define a vari\u00e1vel com um valor inteiro.</li>\n<li>Teste: <code>if (variavel.has_value()) {</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>TypeScript<ul>\n<li><code>null</code> e <code>undefined</code> s\u00e3o os valores padr\u00e3o para aus\u00eancia de valor.</li>\n<li><code>let variavel: number | null = null</code> - Define uma vari\u00e1vel que pode ser <code>number</code> ou <code>null</code>.</li>\n<li><code>variavel = 5</code> - Define a vari\u00e1vel com um valor inteiro.</li>\n<li>Teste: <code>if (variavel !== null) {</code></li>\n</ul>\n</li>\n</ul>\n<h2>Shell</h2>\n<div class=\"language-sh highlight\"><pre><span></span><code><span class=\"c1\">#TEST_CASE subindo e buzinando</span>\n<span class=\"nv\">$show</span>\npower:1,<span class=\"w\"> </span>time:0,<span class=\"w\"> </span>person:<span class=\"o\">(</span>empty<span class=\"o\">)</span>\n\n<span class=\"c1\">#TEST_CASE subindo</span>\n<span class=\"nv\">$enter</span><span class=\"w\"> </span>marcos<span class=\"w\"> </span><span class=\"m\">4</span>\n<span class=\"nv\">$show</span>\npower:1,<span class=\"w\"> </span>time:0,<span class=\"w\"> </span>person:<span class=\"o\">(</span>marcos:4<span class=\"o\">)</span>\n\n<span class=\"c1\">#TEST_CASE ocupada</span>\n<span class=\"nv\">$enter</span><span class=\"w\"> </span>marisa<span class=\"w\"> </span><span class=\"m\">2</span>\nfail:<span class=\"w\"> </span>busy<span class=\"w\"> </span>motorcycle\n\n<span class=\"nv\">$show</span>\npower:1,<span class=\"w\"> </span>time:0,<span class=\"w\"> </span>person:<span class=\"o\">(</span>marcos:4<span class=\"o\">)</span>\n<span class=\"nv\">$end</span>\n</code></pre></div>\n<div class=\"language-s highlight\"><pre><span></span><code><span class=\"c1\">#TEST_CASE subindo2</span>\n<span class=\"o\">$</span><span class=\"n\">init</span><span class=\"w\"> </span><span class=\"m\">5</span>\n<span class=\"o\">$</span><span class=\"n\">show</span>\n<span class=\"n\">power</span><span class=\"o\">:</span><span class=\"m\">5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"o\">:</span><span class=\"m\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">person</span><span class=\"o\">:</span><span class=\"p\">(</span><span class=\"n\">empty</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#TEST_CASE buzinando</span>\n<span class=\"o\">$</span><span class=\"n\">enter</span><span class=\"w\"> </span><span class=\"n\">marcos</span><span class=\"w\"> </span><span class=\"m\">4</span>\n<span class=\"o\">$</span><span class=\"n\">show</span>\n<span class=\"n\">power</span><span class=\"o\">:</span><span class=\"m\">5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"o\">:</span><span class=\"m\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">person</span><span class=\"o\">:</span><span class=\"p\">(</span><span class=\"n\">marcos</span><span class=\"o\">:</span><span class=\"m\">4</span><span class=\"p\">)</span>\n<span class=\"o\">$</span><span class=\"n\">end</span>\n</code></pre></div>\n<div class=\"language-s highlight\"><pre><span></span><code><span class=\"c1\">#TEST_CASE subindo e trocando</span>\n<span class=\"o\">$</span><span class=\"n\">init</span><span class=\"w\"> </span><span class=\"m\">7</span>\n<span class=\"o\">$</span><span class=\"n\">enter</span><span class=\"w\"> </span><span class=\"n\">heitor</span><span class=\"w\"> </span><span class=\"m\">6</span>\n<span class=\"o\">$</span><span class=\"n\">show</span>\n<span class=\"n\">power</span><span class=\"o\">:</span><span class=\"m\">7</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"o\">:</span><span class=\"m\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">person</span><span class=\"o\">:</span><span class=\"p\">(</span><span class=\"n\">heitor</span><span class=\"o\">:</span><span class=\"m\">6</span><span class=\"p\">)</span>\n<span class=\"o\">$</span><span class=\"n\">leave</span>\n<span class=\"n\">heitor</span><span class=\"o\">:</span><span class=\"m\">6</span>\n\n<span class=\"c1\">#TEST_CASE empty</span>\n<span class=\"o\">$</span><span class=\"n\">leave</span>\n<span class=\"n\">fail</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">empty</span><span class=\"w\"> </span><span class=\"n\">motorcycle</span>\n\n<span class=\"c1\">#TEST_CASE replace</span>\n<span class=\"o\">$</span><span class=\"n\">enter</span><span class=\"w\"> </span><span class=\"n\">suzana</span><span class=\"w\"> </span><span class=\"m\">8</span>\n<span class=\"o\">$</span><span class=\"n\">show</span>\n<span class=\"n\">power</span><span class=\"o\">:</span><span class=\"m\">7</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"o\">:</span><span class=\"m\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">person</span><span class=\"o\">:</span><span class=\"p\">(</span><span class=\"n\">suzana</span><span class=\"o\">:</span><span class=\"m\">8</span><span class=\"p\">)</span>\n<span class=\"o\">$</span><span class=\"n\">end</span>\n</code></pre></div>\n<div class=\"language-s highlight\"><pre><span></span><code><span class=\"c1\">#TEST_CASE no time</span>\n<span class=\"o\">$</span><span class=\"n\">init</span><span class=\"w\"> </span><span class=\"m\">7</span>\n<span class=\"o\">$</span><span class=\"n\">buy</span><span class=\"w\"> </span><span class=\"m\">30</span>\n<span class=\"o\">$</span><span class=\"n\">show</span>\n<span class=\"n\">power</span><span class=\"o\">:</span><span class=\"m\">7</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"o\">:</span><span class=\"m\">30</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">person</span><span class=\"o\">:</span><span class=\"p\">(</span><span class=\"n\">empty</span><span class=\"p\">)</span>\n<span class=\"o\">$</span><span class=\"n\">buy</span><span class=\"w\"> </span><span class=\"m\">10</span>\n<span class=\"o\">$</span><span class=\"n\">show</span>\n<span class=\"n\">power</span><span class=\"o\">:</span><span class=\"m\">7</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"o\">:</span><span class=\"m\">40</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">person</span><span class=\"o\">:</span><span class=\"p\">(</span><span class=\"n\">empty</span><span class=\"p\">)</span>\n<span class=\"o\">$</span><span class=\"n\">end</span>\n</code></pre></div>\n<div class=\"language-s highlight\"><pre><span></span><code><span class=\"c1\">#TEST_CASE buy time </span>\n<span class=\"o\">$</span><span class=\"n\">init</span><span class=\"w\"> </span><span class=\"m\">7</span>\n<span class=\"o\">$</span><span class=\"n\">drive</span><span class=\"w\"> </span><span class=\"m\">10</span>\n<span class=\"n\">fail</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">buy</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"w\"> </span><span class=\"n\">first</span>\n<span class=\"o\">$</span><span class=\"n\">buy</span><span class=\"w\"> </span><span class=\"m\">50</span>\n<span class=\"c1\">#TEST_CASE empty</span>\n<span class=\"o\">$</span><span class=\"n\">drive</span><span class=\"w\"> </span><span class=\"m\">10</span>\n<span class=\"n\">fail</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">empty</span><span class=\"w\"> </span><span class=\"n\">motorcycle</span>\n<span class=\"o\">$</span><span class=\"n\">enter</span><span class=\"w\"> </span><span class=\"n\">suzana</span><span class=\"w\"> </span><span class=\"m\">8</span>\n\n<span class=\"c1\">#TEST_CASE driving</span>\n<span class=\"o\">$</span><span class=\"n\">drive</span><span class=\"w\"> </span><span class=\"m\">30</span>\n<span class=\"o\">$</span><span class=\"n\">show</span>\n<span class=\"n\">power</span><span class=\"o\">:</span><span class=\"m\">7</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"o\">:</span><span class=\"m\">20</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">person</span><span class=\"o\">:</span><span class=\"p\">(</span><span class=\"n\">suzana</span><span class=\"o\">:</span><span class=\"m\">8</span><span class=\"p\">)</span>\n<span class=\"o\">$</span><span class=\"n\">end</span>\n</code></pre></div>\n<div class=\"language-s highlight\"><pre><span></span><code><span class=\"c1\">#TEST_CASE limite de idade</span>\n<span class=\"o\">$</span><span class=\"n\">init</span><span class=\"w\"> </span><span class=\"m\">7</span>\n<span class=\"o\">$</span><span class=\"n\">buy</span><span class=\"w\"> </span><span class=\"m\">20</span>\n<span class=\"o\">$</span><span class=\"n\">enter</span><span class=\"w\"> </span><span class=\"n\">andreina</span><span class=\"w\"> </span><span class=\"m\">23</span>\n<span class=\"o\">$</span><span class=\"n\">drive</span><span class=\"w\"> </span><span class=\"m\">15</span>\n<span class=\"n\">fail</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">too</span><span class=\"w\"> </span><span class=\"n\">old</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">drive</span>\n<span class=\"o\">$</span><span class=\"n\">show</span>\n<span class=\"n\">power</span><span class=\"o\">:</span><span class=\"m\">7</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"o\">:</span><span class=\"m\">20</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">person</span><span class=\"o\">:</span><span class=\"p\">(</span><span class=\"n\">andreina</span><span class=\"o\">:</span><span class=\"m\">23</span><span class=\"p\">)</span>\n<span class=\"o\">$</span><span class=\"n\">end</span>\n</code></pre></div>\n<div class=\"language-s highlight\"><pre><span></span><code><span class=\"c1\">#TEST_CASE acabou o tempo</span>\n<span class=\"o\">$</span><span class=\"n\">init</span><span class=\"w\"> </span><span class=\"m\">7</span>\n<span class=\"o\">$</span><span class=\"n\">buy</span><span class=\"w\"> </span><span class=\"m\">20</span>\n<span class=\"o\">$</span><span class=\"n\">enter</span><span class=\"w\"> </span><span class=\"n\">andreina</span><span class=\"w\"> </span><span class=\"m\">6</span>\n<span class=\"o\">$</span><span class=\"n\">drive</span><span class=\"w\"> </span><span class=\"m\">15</span>\n<span class=\"o\">$</span><span class=\"n\">show</span>\n<span class=\"n\">power</span><span class=\"o\">:</span><span class=\"m\">7</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"o\">:</span><span class=\"m\">5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">person</span><span class=\"o\">:</span><span class=\"p\">(</span><span class=\"n\">andreina</span><span class=\"o\">:</span><span class=\"m\">6</span><span class=\"p\">)</span>\n<span class=\"o\">$</span><span class=\"n\">drive</span><span class=\"w\"> </span><span class=\"m\">10</span>\n<span class=\"n\">fail</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"w\"> </span><span class=\"n\">finished</span><span class=\"w\"> </span><span class=\"n\">after</span><span class=\"w\"> </span><span class=\"m\">5</span><span class=\"w\"> </span><span class=\"n\">minutes</span>\n<span class=\"o\">$</span><span class=\"n\">show</span>\n<span class=\"n\">power</span><span class=\"o\">:</span><span class=\"m\">7</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"o\">:</span><span class=\"m\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">person</span><span class=\"o\">:</span><span class=\"p\">(</span><span class=\"n\">andreina</span><span class=\"o\">:</span><span class=\"m\">6</span><span class=\"p\">)</span>\n<span class=\"o\">$</span><span class=\"n\">end</span>\n</code></pre></div>\n<div class=\"language-s highlight\"><pre><span></span><code><span class=\"c1\">#TEST_CASE buzinando</span>\n<span class=\"o\">$</span><span class=\"n\">init</span><span class=\"w\"> </span><span class=\"m\">1</span>\n<span class=\"o\">$</span><span class=\"n\">honk</span>\n<span class=\"n\">Pem</span>\n<span class=\"o\">$</span><span class=\"n\">init</span><span class=\"w\"> </span><span class=\"m\">5</span>\n<span class=\"o\">$</span><span class=\"n\">honk</span>\n<span class=\"n\">Peeeeem</span>\n<span class=\"o\">$</span><span class=\"n\">end</span>\n</code></pre></div>\n<h2>Draft</h2>\n<!-- links .cache/draft -->\n<ul>\n<li>cpp<ul>\n<li><a href=\"https://github.com/qxcodepoo/arcade/blob/master/base/motoca/.cache/draft/cpp/shell.cpp\">shell.cpp</a></li>\n</ul>\n</li>\n<li>java<ul>\n<li><a href=\"https://github.com/qxcodepoo/arcade/blob/master/base/motoca/.cache/draft/java/Shell.java\">Shell.java</a></li>\n</ul>\n</li>\n<li>ts<ul>\n<li><a href=\"https://github.com/qxcodepoo/arcade/blob/master/base/motoca/.cache/draft/ts/shell.ts\">shell.ts</a></li>\n</ul>\n</li>\n</ul>\n<!-- links -->\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT subindo e buzinando\nshow\nend\n======== EXPECT\n$show\npower:1, time:0, person:(empty)\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT subindo\nshow\nenter marcos 4\nshow\nend\n======== EXPECT\n$show\npower:1, time:0, person:(empty)\n$enter marcos 4\n$show\npower:1, time:0, person:(marcos:4)\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT ocupada\nshow\nenter marcos 4\nshow\nenter marisa 2\nshow\nend\n======== EXPECT\n$show\npower:1, time:0, person:(empty)\n$enter marcos 4\n$show\npower:1, time:0, person:(marcos:4)\n$enter marisa 2\nfail: busy motorcycle\n$show\npower:1, time:0, person:(marcos:4)\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT subindo2\ninit 5\nshow\nend\n======== EXPECT\n$init 5\n$show\npower:5, time:0, person:(empty)\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT buzinando\ninit 5\nshow\nenter marcos 4\nshow\nend\n======== EXPECT\n$init 5\n$show\npower:5, time:0, person:(empty)\n$enter marcos 4\n$show\npower:5, time:0, person:(marcos:4)\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT subindo e trocando\ninit 7\nenter heitor 6\nshow\nleave\nend\n======== EXPECT\n$init 7\n$enter heitor 6\n$show\npower:7, time:0, person:(heitor:6)\n$leave\nheitor:6\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT empty\ninit 7\nenter heitor 6\nshow\nleave\nleave\nend\n======== EXPECT\n$init 7\n$enter heitor 6\n$show\npower:7, time:0, person:(heitor:6)\n$leave\nheitor:6\n$leave\nfail: empty motorcycle\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT replace\ninit 7\nenter heitor 6\nshow\nleave\nleave\nenter suzana 8\nshow\nend\n======== EXPECT\n$init 7\n$enter heitor 6\n$show\npower:7, time:0, person:(heitor:6)\n$leave\nheitor:6\n$leave\nfail: empty motorcycle\n$enter suzana 8\n$show\npower:7, time:0, person:(suzana:8)\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT no time\ninit 7\nbuy 30\nshow\nbuy 10\nshow\nend\n======== EXPECT\n$init 7\n$buy 30\n$show\npower:7, time:30, person:(empty)\n$buy 10\n$show\npower:7, time:40, person:(empty)\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT buy time \ninit 7\ndrive 10\nbuy 50\nend\n======== EXPECT\n$init 7\n$drive 10\nfail: buy time first\n$buy 50\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT empty\ninit 7\ndrive 10\nbuy 50\ndrive 10\nenter suzana 8\nend\n======== EXPECT\n$init 7\n$drive 10\nfail: buy time first\n$buy 50\n$drive 10\nfail: empty motorcycle\n$enter suzana 8\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT driving\ninit 7\ndrive 10\nbuy 50\ndrive 10\nenter suzana 8\ndrive 30\nshow\nend\n======== EXPECT\n$init 7\n$drive 10\nfail: buy time first\n$buy 50\n$drive 10\nfail: empty motorcycle\n$enter suzana 8\n$drive 30\n$show\npower:7, time:20, person:(suzana:8)\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT limite de idade\ninit 7\nbuy 20\nenter andreina 23\ndrive 15\nshow\nend\n======== EXPECT\n$init 7\n$buy 20\n$enter andreina 23\n$drive 15\nfail: too old to drive\n$show\npower:7, time:20, person:(andreina:23)\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT acabou o tempo\ninit 7\nbuy 20\nenter andreina 6\ndrive 15\nshow\ndrive 10\nshow\nend\n======== EXPECT\n$init 7\n$buy 20\n$enter andreina 6\n$drive 15\n$show\npower:7, time:5, person:(andreina:6)\n$drive 10\nfail: time finished after 5 minutes\n$show\npower:7, time:0, person:(andreina:6)\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT buzinando\ninit 1\nhonk\ninit 5\nhonk\nend\n======== EXPECT\n$init 1\n$honk\nPem\n$init 5\n$honk\nPeeeeem\n$end\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {
        "ts": [
            {
                "name": "shell.ts",
                "contents": "const input = () => \"\"; // MODO_TESTE\nexport {};\n\nfunction main() {\n    //CRIE SUA MOTO AQUI    \n\n    while (true) {\n        const line = input();\n        console.log(\"$\" + line);\n\n        const par = line.split(\" \");\n        const cmd = par[0];\n\n        if (cmd == \"end\") {\n            break;\n        } \n        // else if (cmd == \"init\") {\n        //     // INICIE SUA MOTO USANDO O CONSTRUTOR\n        //     const power = parseInt(par[1]);\n        // }\n        // else if (cmd == \"show\") {\n        //     // MOSTRE O ESTADO DA MOTO\n        // }\n        // else if (cmd == \"enter\") {\n        //     // CRIE UM OBJETO PESSOA E INSIRA NA MOTO\n        //     const name = par[1];\n        //     const age = parseInt(par[2]);\n        // }\n        // else if (cmd == \"leave\") {\n        //     // REMOVA A PESSOA DA MOTO\n        //     // SE O OBJETO RETORNADO N\u00c3O FOR NULO, MOSTRE SEUS DADOS\n        // }\n        // else if (cmd == \"honk\") {\n        //     // TOQUE A BUZINA\n        // }\n        // else if (cmd == \"buy\") {\n        //     // COMPRE TEMPO DE USO DA MOTO\n        //     const time = parseInt(par[1]);\n        // }\n        // else if (cmd == \"drive\") {\n        //     // DIRIJA A MOTO\n        //     const time = parseInt(par[1]);\n        // } \n        else {\n            console.log(\"fail: comando invalido\");\n        }\n    }\n}\n\nmain()\n",
                "type": "show"
            }
        ],
        "java": [
            {
                "name": "Shell.java",
                "contents": "import java.util.*;\n\npublic class Shell{\n    \n    public static void main(String[] args) {\n        // CRIE SUA MOTO AQUI\n\n        while(true) {\n            var line = scanner.nextLine();\n            System.out.println(\"$\" + line);\n\n            var par = line.split(\" \");\n            var cmd = par[0];\n\n            if (cmd.equals(\"end\")) {\n                break;\n            }\n            // else if (cmd.equals(\"init\")) {\n            //     // CRIE SUA MOTO AQUI\n            //     var power = Integer.parseInt(par[1]);\n            // }\n            // else if (cmd.equals(\"show\")) {\n            //     // MOSTRE SUA MOTO AQUI\n            // }\n            // else if (cmd.equals(\"enter\")) {\n            //     // CRIE UM OBJETO PESSOA AQUI\n            //     // DEPOIS INSIRA NA MOTO\n            //     var name = par[1];\n            //     var age = Integer.parseInt(par[2]);\n            // }\n            // else if (cmd.equals(\"leave\")) {\n            //     // RETIRE A PESSOA DA MOTO\n            //     // MOSTRE A PESSOA RETIRADA AQUI\n            // }\n            // else if (cmd.equals(\"buy\")) {\n            //     // COMPRE TEMPO\n            //     var time = Integer.parseInt(par[1]);\n            // }\n            // else if (cmd.equals(\"drive\")) {\n            //     // DIRIJA A MOTO\n            //     var time = Integer.parseInt(par[1]);\n            // }\n            // else if (cmd.equals(\"honk\")) {\n            //     // BUZINE\n            // }\n            else {\n                System.out.println(\"fail: comando invalido\");\n            }\n        }\n    }\n\n    static Scanner scanner = new Scanner(System.in);\n}\n",
                "type": "show"
            }
        ],
        "cpp": [
            {
                "name": "shell.cpp",
                "contents": "#include <iostream>\n#include <memory> //shared_ptr\n#include <sstream> //stringstream\n#include <utility> //exchange\nusing namespace std;\n\nint main() {\n    // CRIE SUA MOTO AQUI COM POTENCIA 1\n    while (true) {\n        string line, cmd;\n        getline(cin, line);\n        cout << \"$\" << line << endl;\n\n        stringstream ss(line);\n        ss >> cmd;\n\n        if (cmd == \"end\") {\n            break;\n        } \n        // else if (cmd == \"init\") {\n        //     // INICIE A MOTO AQUI USANDO O CONSTRUTOR\n        //     int power {};\n        //     ss >> power;\n        // } \n        // else if (cmd == \"show\") {\n        //     // MOSTRE A MOTO AQUI\n        // }\n        // else if (cmd == \"leave\") {\n        //     // RETIRE A PESSOA DA MOTO\n        //     // SE EXISTIR, MOSTRE A PESSOA\n        // }\n        // else if (cmd == \"honk\") {\n        //     // BUZINE A MOTO\n        // }\n        // else if (cmd == \"enter\") {\n        //     // CRIE UM PONTEIRO PARA PESSOA E INICIE-O AQUI\n        //     // DEPOIS INSIRA A PERSON NA MOTO\n        //     string name {};\n        //     int age {};\n        //     ss >> name >> age;\n        // }\n        // else if (cmd == \"buy\") {\n        //     // COMPRE TEMPO PARA DIRIGIR\n        //     int time {};\n        //     ss >> time;\n        // }\n        // else if (cmd == \"drive\") {\n        //     // DIRIJA A MOTO POR UM TEMPO\n        //     int time {};\n        //     ss >> time;\n        // }\n        else {\n            cout << \"fail: invalid command\\n\";\n        }\n    }\n}\n",
                "type": "show"
            }
        ]
    }
}
