{
    "title": "@junkfood: Comprando comida cara e duvidosa",
    "description": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>@junkfood: Comprando comida cara e duvidosa</title>\n    <style>\n        body { font-family: sans-serif; line-height: 1.6; margin: 20px; }\n        pre { background-color: #f4f4f4; padding: 10px; border-radius: 5px; overflow-x: auto; }\n        code { font-family: monospace; }\n        table { border-collapse: collapse; width: 100%; }\n        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n        th { background-color: #f2f2f2; }\n        /* Estilos b\u00e1sicos para o destaque de sintaxe (gerado pelo pygments via pymdownx.highlight) */\n        .highlight .hll { background-color: #ffffcc }\n        .highlight .c { color: #999988; font-style: italic } /* Comment */\n        .highlight .err { color: #a61717; background-color: #e3d2d2 } /* Error */\n        .highlight .k { color: #000000; font-weight: bold } /* Keyword */\n        .highlight .o { color: #000000; font-weight: bold } /* Operator */\n        .highlight .ch { color: #999988; font-style: italic } /* Comment.Hashbang */\n        .highlight .cm { color: #999988; font-style: italic } /* Comment.Multiline */\n        .highlight .cp { color: #999999; font-weight: bold; font-style: italic } /* Comment.Preproc */\n        .highlight .cpf { color: #999988; font-style: italic } /* Comment.PreprocFile */\n        .highlight .c1 { color: #999988; font-style: italic } /* Comment.Single */\n        .highlight .cs { color: #999999; font-weight: bold; font-style: italic } /* Comment.Special */\n        .highlight .gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */\n        .highlight .ge { color: #000000; font-style: italic } /* Generic.Emph */\n        .highlight .gr { color: #aa0000 } /* Generic.Error */\n        .highlight .gh { color: #999999 } /* Generic.Heading */\n        .highlight .gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */\n        .highlight .go { color: #888888 } /* Generic.Output */\n        .highlight .gp { color: #555555 } /* Generic.Prompt */\n        .highlight .gs { font-weight: bold } /* Generic.Strong */\n        .highlight .gu { color: #aaaaaa } /* Generic.Subheading */\n        .highlight .gt { color: #aa0000 } /* Generic.Traceback */\n        .highlight .kc { color: #000000; font-weight: bold } /* Keyword.Constant */\n        .highlight .kd { color: #000000; font-weight: bold } /* Keyword.Declaration */\n        .highlight .kn { color: #000000; font-weight: bold } /* Keyword.Namespace */\n        .highlight .kp { color: #000000; font-weight: bold } /* Keyword.Pseudo */\n        .highlight .kr { color: #000000; font-weight: bold } /* Keyword.Reserved */\n        .highlight .kt { color: #445588; font-weight: bold } /* Keyword.Type */\n        .highlight .m { color: #009999 } /* Literal.Number */\n        .highlight .s { color: #dd1144 } /* Literal.String */\n        .highlight .na { color: #008080 } /* Name.Attribute */\n        .highlight .nb { color: #0086B3 } /* Name.Builtin */\n        .highlight .nc { color: #445588; font-weight: bold } /* Name.Class */\n        .highlight .no { color: #008080 } /* Name.Constant */\n        .highlight .nd { color: #3c5d5d; font-weight: bold } /* Name.Decorator */\n        .highlight .ni { color: #800080 } /* Name.Entity */\n        .highlight .ne { color: #990000; font-weight: bold } /* Name.Exception */\n        .highlight .nf { color: #990000; font-weight: bold } /* Name.Function */\n        .highlight .nl { color: #990000; font-weight: bold } /* Name.Label */\n        .highlight .nn { color: #555555; font-weight: bold } /* Name.Namespace */\n        .highlight .nx { color: #990000; font-weight: bold } /* Name.Other */\n        .highlight .py { color: #009999 } /* Name.Property */\n        .highlight .p { color: #000000 } /* Name.Punctuation */\n        .highlight .nv { color: #008080 } /* Name.Variable */\n        .highlight .ow { color: #000000; font-weight: bold } /* Operator.Word */\n        .highlight .w { color: #bbbbbb } /* Text.Whitespace */\n        .highlight .mf { color: #009999 } /* Literal.Number.Float */\n        .highlight .mh { color: #009999 } /* Literal.Number.Hex */\n        .highlight .mi { color: #009999 } /* Literal.Number.Integer */\n        .highlight .mo { color: #009999 } /* Literal.Number.Oct */\n        .highlight .sb { color: #dd1144 } /* Literal.String.Backtick */\n        .highlight .sc { color: #dd1144 } /* Literal.String.Char */\n        .highlight .sd { color: #dd1144 } /* Literal.String.Doc */\n        .highlight .s2 { color: #dd1144 } /* Literal.String.Double */\n        .highlight .se { color: #dd1144 } /* Literal.String.Escape */\n        .highlight .sh { color: #dd1144 } /* Literal.String.Heredoc */\n        .highlight .si { color: #dd1144 } /* Literal.String.Interpol */\n        .highlight .sx { color: #dd1144 } /* Literal.String.Other */\n        .highlight .sr { color: #009926 } /* Literal.String.Regex */\n        .highlight .s1 { color: #dd1144 } /* Literal.String.Single */\n        .highlight .ss { color: #dd1144 } /* Literal.String.Symbol */\n        .highlight .bp { color: #0086B3 } /* Name.Builtin.Pseudo */\n        .highlight .vc { color: #008080 } /* Name.Variable.Class */\n        .highlight .vg { color: #008080 } /* Name.Variable.Global */\n        .highlight .vi { color: #008080 } /* Name.Variable.Instance */\n        .highlight .il { color: #009999 } /* Literal.Number.Integer.Long */\n    </style>\n    <script type=\"text/javascript\" async\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML\">\n    </script>\n</head>\n<body>\n<h1>Comprando comida cara e duvidosa</h1>\n<!-- toch -->\n<table>\n<thead>\n<tr>\n<th><a href=\"#intro\">Intro</a></th>\n<th><a href=\"#draft\">Draft</a></th>\n<th><a href=\"#guide\">Guide</a></th>\n<th><a href=\"#shell\">Shell</a></th>\n<th><a href=\"#resolu\u00e7\u00e3o\">Resolu\u00e7\u00e3o</a></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<!-- toch -->\n\n<p><img alt=\"cover\" src=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/junkfood/cover.jpg\" /></p>\n<h2>Intro</h2>\n<p>M\u00e1quinas de junk food s\u00f3 servem pra 2 coisas, 1 vender comidas que fazem mal pra sa\u00fade, 2 rejeitar as notas velhas que voc\u00ea tem.</p>\n<p>O objetivo dessa atividade \u00e9 implementar uma classe respons\u00e1vel por uma m\u00e1quina de vender JunkFood. Na m\u00e1quina existem v\u00e1rias espirais (slots). Uma espiral cont\u00e9m uma certa quantidade de produtos do mesmo tipo e mesmo pre\u00e7o. O usu\u00e1rio coloca o dinheiro, compra o produto e recebe o troco.</p>\n<ul>\n<li>\n<p><strong>Descri\u00e7\u00e3o</strong></p>\n<ul>\n<li>A m\u00e1quina de vendas \u00e9 representada pela classe <code>Machine</code>, que cont\u00e9m um conjunto de \"espirais\", cada uma associada a um produto.</li>\n<li>Os m\u00e9todos implementados permitem configurar os produtos dispon\u00edveis na m\u00e1quina, inserir dinheiro, solicitar troco, comprar produtos e visualizar o estado atual da m\u00e1quina.</li>\n<li>Cada espiral pode conter um produto, representado pela classe <code>Slot</code>, que armazena o nome, quantidade e pre\u00e7o do produto.</li>\n<li>Os m\u00e9todos fornecidos incluem valida\u00e7\u00f5es para garantir a integridade das opera\u00e7\u00f5es, como verificar se o saldo \u00e9 suficiente para a compra, se h\u00e1 produtos dispon\u00edveis, entre outros.</li>\n</ul>\n</li>\n<li>\n<p><strong>Responsabilidades</strong></p>\n<ul>\n<li>Na classe Slot<ul>\n<li>Inicialize as vari\u00e1veis do construtor<ul>\n<li>name: string = \"empty\",</li>\n<li>qtd: number = 0 e</li>\n<li>preco: number = 0.0</li>\n</ul>\n</li>\n<li>Implemente os gets e sets</li>\n<li>Crie o retorno do toString como no modelo: <code>[   empty : 0 U : 0.00 RS]</code></li>\n</ul>\n</li>\n<li>A classe <code>Machine</code> \u00e9 respons\u00e1vel por gerenciar as opera\u00e7\u00f5es da m\u00e1quina de vendas.<ul>\n<li>M\u00e9todos a serem implementados:<ul>\n<li><code>getSlot(index: int) : Slot</code>:  Se houver slot nessa posi\u00e7\u00e3o, retorna.</li>\n<li><code>setSlot(indice: number, name: string, qtd: number, price: number)</code>: Altera o valor slot na posi\u00e7\u00e3o indice.<ul>\n<li>erro: <code>fail: indice nao existe</code>.</li>\n</ul>\n</li>\n<li><code>limpar(indice: number)</code>: Limpa as informa\u00e7\u00f5es do slot nessa posi\u00e7\u00e3o.</li>\n<li><code>inserirDinheiro(value: number)</code>: Insere dinheiro na m\u00e1quina.</li>\n<li><code>pedirTroco(): number</code>: Retorna o troco para o cliente.</li>\n<li><code>comprar(ind: number)</code>: Realiza a compra de um produto de um slot na m\u00e1quina. A compra s\u00f3 pode ser realizada se existir produto nessa posi\u00e7\u00e3o, se o saldo for suficiente e se a quantidade do produto for maior que zero. Caso positivo, quantidade \u00e9 reduzida em 1 e o valor do produto \u00e9 decrementado no saldo.<ul>\n<li>erros: <code>fail: indice nao existe</code>, <code>fail: saldo insuficiente</code>, <code>fail: espiral sem produtos</code>.</li>\n</ul>\n</li>\n<li><code>getSaldo(): number</code>: Retorna o saldo atual na m\u00e1quina.</li>\n<li><code>toString(): string</code>: Retorna uma representa\u00e7\u00e3o em string do estado atual da m\u00e1quina.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2>Draft</h2>\n<ul>\n<li><a href=\"https://github.com/qxcodepoo/arcade/blob/master/base/junkfood/.cache/draft.cpp\">draft.cpp</a></li>\n<li><a href=\"https://github.com/qxcodepoo/arcade/blob/master/base/junkfood/.cache/draft.ts\">draft.ts</a></li>\n</ul>\n<h2>Guide</h2>\n<p><img alt=\"diagrama\" src=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/junkfood/diagrama.png\" /></p>\n<p><a href=\"https://youtu.be/BPVmEHlR5Ww?si=q4WIfz4_6EMC1CcY\"><img alt=\"youtube icon\" src=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/junkfood/../yousolver.png\" /></a></p>\n<!-- load diagrama.puml fenced=ts:filter -->\n\n<div class=\"language-ts highlight\"><pre><span></span><code><span class=\"kd\">@startuml</span>\n\n<span class=\"nx\">skinparam</span><span class=\"w\"> </span><span class=\"nx\">defaultFontName</span><span class=\"w\"> </span><span class=\"s2\">&quot;Source Code Pro&quot;</span>\n<span class=\"nx\">skinparam</span><span class=\"w\"> </span><span class=\"nx\">dpi</span><span class=\"w\"> </span><span class=\"mf\">150</span>\n\n\n<span class=\"kd\">class</span><span class=\"w\"> </span><span class=\"nx\">Slot</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"nx\">name</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">String</span>\n<span class=\"w\">        </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"nx\">price</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">float</span>\n<span class=\"w\">        </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"nx\">quantity</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">int</span>\n<span class=\"w\">    </span><span class=\"nx\">__</span>\n<span class=\"w\">    </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">Slot</span><span class=\"p\">(</span><span class=\"nx\">name</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">String</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">price</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">float</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">quantity</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"nx\">__</span>\n<span class=\"w\">    </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">getName</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nb\">String</span>\n<span class=\"w\">    </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">getPrice</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kr\">float</span>\n<span class=\"w\">    </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">getQuantity</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kr\">int</span>\n<span class=\"w\">    </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">setName</span><span class=\"p\">(</span><span class=\"nx\">name</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">String</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"ow\">void</span>\n<span class=\"w\">    </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">setPrice</span><span class=\"p\">(</span><span class=\"nx\">price</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">float</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"ow\">void</span>\n<span class=\"w\">    </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">setQuantity</span><span class=\"p\">(</span><span class=\"nx\">quantity</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"ow\">void</span>\n<span class=\"w\">    </span><span class=\"nx\">__</span>\n<span class=\"w\">    </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">toString</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nb\">String</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">class</span><span class=\"w\"> </span><span class=\"nx\">VendingMachine</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"nx\">slots</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Array</span><span class=\"o\">&lt;</span><span class=\"nx\">Slot</span><span class=\"o\">&gt;</span>\n<span class=\"w\">        </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"nx\">profit</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">float</span>\n<span class=\"w\">        </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"nx\">cash</span><span class=\"w\">   </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">float</span>\n<span class=\"w\">        </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"nx\">capacity</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">int</span>\n<span class=\"w\">    </span><span class=\"nx\">__</span>\n\n<span class=\"w\">    </span><span class=\"s1\">&#39; inicialize a m\u00e1quina criando todos os slots</span>\n<span class=\"s1\">    + VendingMachine(capacity: int)</span>\n<span class=\"s1\">    __</span>\n\n<span class=\"s1\">    &#39;</span><span class=\"w\"> </span><span class=\"nx\">se</span><span class=\"w\"> </span><span class=\"nx\">houver</span><span class=\"w\"> </span><span class=\"nx\">slot</span><span class=\"w\"> </span><span class=\"nx\">nessa</span><span class=\"w\"> </span><span class=\"nx\">posi\u00e7\u00e3o</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">retorne</span>\n<span class=\"w\">    </span><span class=\"s1\">&#39; se n\u00e3o, retorne null ou lan\u00e7e uma excess\u00e3o</span>\n<span class=\"s1\">    + getSlot(index: int) : Slot</span>\n\n<span class=\"s1\">    &#39;</span><span class=\"w\"> </span><span class=\"nx\">altere</span><span class=\"w\"> </span><span class=\"nx\">o</span><span class=\"w\"> </span><span class=\"nx\">valor</span><span class=\"w\"> </span><span class=\"nx\">slot</span><span class=\"w\"> </span><span class=\"nx\">nessa</span><span class=\"w\"> </span><span class=\"nx\">posi\u00e7\u00e3o</span>\n<span class=\"w\">    </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">setSlot</span><span class=\"p\">(</span><span class=\"nx\">index</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">slot</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Slot</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"ow\">void</span>\n\n<span class=\"w\">    </span><span class=\"s1\">&#39; limpe as informa\u00e7\u00f5es do slot nessa posi\u00e7\u00e3o</span>\n<span class=\"s1\">    + clearSlot(index: int) : void</span>\n<span class=\"s1\">    __</span>\n\n<span class=\"s1\">    &#39;</span><span class=\"w\"> </span><span class=\"nx\">adicione</span><span class=\"w\"> </span><span class=\"nx\">dinheiro</span><span class=\"w\"> </span><span class=\"nx\">no</span><span class=\"w\"> </span><span class=\"nx\">cash</span><span class=\"w\"> </span><span class=\"nx\">da</span><span class=\"w\"> </span><span class=\"nx\">m\u00e1quina</span>\n<span class=\"w\">    </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">insertCash</span><span class=\"p\">(</span><span class=\"nx\">cash</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">float</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"ow\">void</span>\n\n<span class=\"w\">    </span><span class=\"s1\">&#39; retorne o valor do cash da m\u00e1quina e zere o cash</span>\n<span class=\"s1\">    + withdrawCash() : float</span>\n\n<span class=\"s1\">    &#39;</span><span class=\"w\"> </span><span class=\"nx\">informe</span><span class=\"w\"> </span><span class=\"nx\">o</span><span class=\"w\"> </span><span class=\"nx\">valor</span><span class=\"w\"> </span><span class=\"k\">do</span><span class=\"w\"> </span><span class=\"nx\">cash</span><span class=\"w\"> </span><span class=\"nx\">sem</span><span class=\"w\"> </span><span class=\"nx\">zerar</span><span class=\"w\"> </span><span class=\"nx\">o</span><span class=\"w\"> </span><span class=\"nx\">cash</span>\n<span class=\"w\">    </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">getCash</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kr\">float</span>\n\n<span class=\"w\">    </span><span class=\"s1\">&#39; informe o valor apurado com todas as vendas</span>\n<span class=\"s1\">    + getProfit() : float</span>\n<span class=\"s1\">    __</span>\n\n<span class=\"s1\">    &#39;</span><span class=\"w\"> </span><span class=\"nx\">se</span><span class=\"w\"> </span><span class=\"nx\">existir</span><span class=\"w\"> </span><span class=\"nx\">produto</span><span class=\"w\"> </span><span class=\"nx\">nessa</span><span class=\"w\"> </span><span class=\"nx\">posi\u00e7\u00e3o</span>\n<span class=\"w\">    </span><span class=\"s1\">&#39; se o dinheiro do cash for suficiente</span>\n<span class=\"s1\">    &#39;</span><span class=\"w\"> </span><span class=\"nx\">se</span><span class=\"w\"> </span><span class=\"nx\">a</span><span class=\"w\"> </span><span class=\"nx\">quantidade</span><span class=\"w\"> </span><span class=\"k\">do</span><span class=\"w\"> </span><span class=\"nx\">produto</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"nx\">maior</span><span class=\"w\"> </span><span class=\"nx\">que</span><span class=\"w\"> </span><span class=\"nx\">zero</span>\n<span class=\"w\">    </span><span class=\"s1\">&#39; deduza da quantidade 1</span>\n<span class=\"s1\">    &#39;</span><span class=\"w\"> </span><span class=\"nx\">deduza</span><span class=\"w\"> </span><span class=\"k\">do</span><span class=\"w\"> </span><span class=\"nx\">cash</span><span class=\"w\"> </span><span class=\"nx\">o</span><span class=\"w\"> </span><span class=\"nx\">valor</span><span class=\"w\"> </span><span class=\"k\">do</span><span class=\"w\"> </span><span class=\"nx\">produto</span>\n<span class=\"w\">    </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">buyItem</span><span class=\"p\">(</span><span class=\"nx\">index</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"ow\">void</span>\n<span class=\"w\">    </span><span class=\"o\">--</span>\n<span class=\"w\">    </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">toString</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nb\">String</span>\n<span class=\"p\">}</span>\n\n<span class=\"nx\">VendingMachine</span><span class=\"w\"> </span><span class=\"s2\">&quot;1&quot;</span><span class=\"w\"> </span><span class=\"nx\">o</span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"s2\">&quot;1..*&quot;</span><span class=\"w\"> </span><span class=\"nx\">Slot</span>\n<span class=\"kd\">@enduml</span>\n</code></pre></div>\n<!-- load -->\n\n<hr />\n<ul>\n<li>Fa\u00e7a primeiro a classe Espiral.</li>\n<li>\n<p>No construtor da class Maquina receba a quantidade de espirais. Para iniciar o vetor de espirais voc\u00ea pode fazer um la\u00e7o inserindo qtd Espirais no vetor (Java).</p>\n</li>\n<li>\n<p>Exemplo em Java</p>\n</li>\n</ul>\n<div class=\"language-java highlight\"><pre><span></span><code><span class=\"kd\">class</span> <span class=\"nc\">Espiral</span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"p\">...</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"nf\">Espiral</span><span class=\"p\">({</span>\n<span class=\"w\">    </span><span class=\"p\">...</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">class</span> <span class=\"nc\">Machine</span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"p\">...</span>\n<span class=\"w\">    </span><span class=\"n\">espirais</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">ArrayList</span><span class=\"o\">&lt;</span><span class=\"n\">Espiral</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"nf\">Machine</span><span class=\"p\">(</span><span class=\"n\">nespirais</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">number</span><span class=\"p\">){</span>\n<span class=\"w\">        </span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"na\">espirais</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">ArrayList</span><span class=\"o\">&lt;&gt;</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"k\">for</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">nespirais</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">){</span>\n<span class=\"w\">            </span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"na\">espirais</span><span class=\"p\">.</span><span class=\"na\">add</span><span class=\"p\">(</span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Espiral</span><span class=\"p\">(</span><span class=\"s\">&quot;empty&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">0f</span><span class=\"p\">));</span><span class=\"w\"> </span><span class=\"c1\">//adicionando nespirais vazias</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<ul>\n<li>Exemplo c++</li>\n</ul>\n<div class=\"language-c++ highlight\"><pre><span></span><code><span class=\"c1\">//c++</span>\n<span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">Espiral</span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">//atributos</span>\n<span class=\"w\">    </span><span class=\"n\">Espiral</span><span class=\"p\">(){</span>\n<span class=\"w\">        </span><span class=\"c1\">//inicializacao</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">Maquina</span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">vector</span><span class=\"o\">&lt;</span><span class=\"n\">Espiral</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">espirais</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"c1\">//outros atributos</span>\n<span class=\"k\">public</span><span class=\"o\">:</span>\n<span class=\"w\">    </span><span class=\"c1\">//invocando o construtor na lista de inicializa\u00e7\u00e3o</span>\n<span class=\"w\">    </span><span class=\"n\">Maquina</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">nespirais</span><span class=\"p\">)</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">espirais</span><span class=\"p\">{</span><span class=\"n\">nespirais</span><span class=\"p\">}{</span><span class=\"w\"> </span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h2>Shell</h2>\n<div class=\"language-bash highlight\"><pre><span></span><code><span class=\"c1\">#TEST_CASE init</span>\n\n<span class=\"c1\"># init _espirais</span>\n<span class=\"nv\">$init</span><span class=\"w\"> </span><span class=\"m\">3</span>\n<span class=\"nv\">$show</span>\nsaldo:<span class=\"w\"> </span><span class=\"m\">0</span>.00\n<span class=\"m\">0</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"w\">   </span>empty<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">0</span><span class=\"w\"> </span>U<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">0</span>.00<span class=\"w\"> </span>RS<span class=\"o\">]</span>\n<span class=\"m\">1</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"w\">   </span>empty<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">0</span><span class=\"w\"> </span>U<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">0</span>.00<span class=\"w\"> </span>RS<span class=\"o\">]</span>\n<span class=\"m\">2</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"w\">   </span>empty<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">0</span><span class=\"w\"> </span>U<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">0</span>.00<span class=\"w\"> </span>RS<span class=\"o\">]</span>\n\n<span class=\"c1\">#TEST_CASE inserindo comida</span>\n<span class=\"c1\"># set _ind _nome _qtd _valor </span>\n<span class=\"nv\">$set</span><span class=\"w\"> </span><span class=\"m\">2</span><span class=\"w\"> </span>todinho<span class=\"w\"> </span><span class=\"m\">3</span><span class=\"w\"> </span><span class=\"m\">2</span>.50\n<span class=\"nv\">$show</span>\nsaldo:<span class=\"w\"> </span><span class=\"m\">0</span>.00\n<span class=\"m\">0</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"w\">   </span>empty<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">0</span><span class=\"w\"> </span>U<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">0</span>.00<span class=\"w\"> </span>RS<span class=\"o\">]</span>\n<span class=\"m\">1</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"w\">   </span>empty<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">0</span><span class=\"w\"> </span>U<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">0</span>.00<span class=\"w\"> </span>RS<span class=\"o\">]</span>\n<span class=\"m\">2</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"w\"> </span>todinho<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">3</span><span class=\"w\"> </span>U<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">2</span>.50<span class=\"w\"> </span>RS<span class=\"o\">]</span>\n\n<span class=\"nv\">$set</span><span class=\"w\"> </span><span class=\"m\">0</span><span class=\"w\"> </span>tampico<span class=\"w\"> </span><span class=\"m\">1</span><span class=\"w\"> </span><span class=\"m\">1</span>.50\n<span class=\"nv\">$set</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"w\"> </span>xaverde<span class=\"w\"> </span><span class=\"m\">3</span><span class=\"w\"> </span><span class=\"m\">5</span>.00\n<span class=\"nv\">$show</span><span class=\"w\">   </span>\nsaldo:<span class=\"w\"> </span><span class=\"m\">0</span>.00\n<span class=\"m\">0</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"w\"> </span>tampico<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">1</span><span class=\"w\"> </span>U<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">1</span>.50<span class=\"w\"> </span>RS<span class=\"o\">]</span>\n<span class=\"m\">1</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"w\"> </span>xaverde<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">3</span><span class=\"w\"> </span>U<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">5</span>.00<span class=\"w\"> </span>RS<span class=\"o\">]</span>\n<span class=\"m\">2</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"w\"> </span>todinho<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">3</span><span class=\"w\"> </span>U<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">2</span>.50<span class=\"w\"> </span>RS<span class=\"o\">]</span>\n\n<span class=\"c1\">#TEST_CASE limpando</span>\n<span class=\"c1\"># limpar _ind</span>\n<span class=\"nv\">$limpar</span><span class=\"w\"> </span><span class=\"m\">2</span>\n<span class=\"nv\">$show</span>\nsaldo:<span class=\"w\"> </span><span class=\"m\">0</span>.00\n<span class=\"m\">0</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"w\"> </span>tampico<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">1</span><span class=\"w\"> </span>U<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">1</span>.50<span class=\"w\"> </span>RS<span class=\"o\">]</span>\n<span class=\"m\">1</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"w\"> </span>xaverde<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">3</span><span class=\"w\"> </span>U<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">5</span>.00<span class=\"w\"> </span>RS<span class=\"o\">]</span>\n<span class=\"m\">2</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"w\">   </span>empty<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">0</span><span class=\"w\"> </span>U<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">0</span>.00<span class=\"w\"> </span>RS<span class=\"o\">]</span>\n<span class=\"nv\">$set</span><span class=\"w\"> </span><span class=\"m\">4</span><span class=\"w\"> </span>ovo<span class=\"w\"> </span><span class=\"m\">2</span><span class=\"w\"> </span><span class=\"m\">4</span>.30\nfail:<span class=\"w\"> </span>indice<span class=\"w\"> </span>nao<span class=\"w\"> </span>existe\n\n<span class=\"c1\">#TEST_CASE dinheiro</span>\n<span class=\"c1\"># dinheiro _valor</span>\n<span class=\"nv\">$dinheiro</span><span class=\"w\"> </span><span class=\"m\">5</span>\n<span class=\"nv\">$dinheiro</span><span class=\"w\"> </span><span class=\"m\">4</span>\n<span class=\"nv\">$show</span><span class=\"w\">   </span>\nsaldo:<span class=\"w\"> </span><span class=\"m\">9</span>.00\n<span class=\"m\">0</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"w\"> </span>tampico<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">1</span><span class=\"w\"> </span>U<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">1</span>.50<span class=\"w\"> </span>RS<span class=\"o\">]</span>\n<span class=\"m\">1</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"w\"> </span>xaverde<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">3</span><span class=\"w\"> </span>U<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">5</span>.00<span class=\"w\"> </span>RS<span class=\"o\">]</span>\n<span class=\"m\">2</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"w\">   </span>empty<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">0</span><span class=\"w\"> </span>U<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">0</span>.00<span class=\"w\"> </span>RS<span class=\"o\">]</span>\n\n<span class=\"c1\">#TEST_CASE troco</span>\n<span class=\"nv\">$troco</span>\nvoce<span class=\"w\"> </span>recebeu<span class=\"w\"> </span><span class=\"m\">9</span>.00<span class=\"w\"> </span>RS\n<span class=\"nv\">$show</span>\nsaldo:<span class=\"w\"> </span><span class=\"m\">0</span>.00\n<span class=\"m\">0</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"w\"> </span>tampico<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">1</span><span class=\"w\"> </span>U<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">1</span>.50<span class=\"w\"> </span>RS<span class=\"o\">]</span>\n<span class=\"m\">1</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"w\"> </span>xaverde<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">3</span><span class=\"w\"> </span>U<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">5</span>.00<span class=\"w\"> </span>RS<span class=\"o\">]</span>\n<span class=\"m\">2</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"w\">   </span>empty<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">0</span><span class=\"w\"> </span>U<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">0</span>.00<span class=\"w\"> </span>RS<span class=\"o\">]</span>\n<span class=\"nv\">$dinheiro</span><span class=\"w\"> </span><span class=\"m\">8</span>\n\n<span class=\"c1\">#TEST_CASE comprar</span>\n<span class=\"c1\"># comprar _ind</span>\n<span class=\"nv\">$comprar</span><span class=\"w\"> </span><span class=\"m\">1</span>\nvoce<span class=\"w\"> </span>comprou<span class=\"w\"> </span>um<span class=\"w\"> </span>xaverde\n\n<span class=\"c1\">#TEST_CASE comprar sem dinheiro</span>\n<span class=\"nv\">$comprar</span><span class=\"w\"> </span><span class=\"m\">1</span>\nfail:<span class=\"w\"> </span>saldo<span class=\"w\"> </span>insuficiente\n\n<span class=\"c1\">#TEST_CASE comprar</span>\n<span class=\"nv\">$comprar</span><span class=\"w\"> </span><span class=\"m\">0</span>\nvoce<span class=\"w\"> </span>comprou<span class=\"w\"> </span>um<span class=\"w\"> </span>tampico\n<span class=\"nv\">$show</span>\nsaldo:<span class=\"w\"> </span><span class=\"m\">1</span>.50\n<span class=\"m\">0</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"w\"> </span>tampico<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">0</span><span class=\"w\"> </span>U<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">1</span>.50<span class=\"w\"> </span>RS<span class=\"o\">]</span>\n<span class=\"m\">1</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"w\"> </span>xaverde<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">2</span><span class=\"w\"> </span>U<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">5</span>.00<span class=\"w\"> </span>RS<span class=\"o\">]</span>\n<span class=\"m\">2</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"w\">   </span>empty<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">0</span><span class=\"w\"> </span>U<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">0</span>.00<span class=\"w\"> </span>RS<span class=\"o\">]</span>\n\n<span class=\"c1\">#TEST_CASE comprar sem produtos</span>\n<span class=\"nv\">$comprar</span><span class=\"w\"> </span><span class=\"m\">0</span>\nfail:<span class=\"w\"> </span>espiral<span class=\"w\"> </span>sem<span class=\"w\"> </span>produtos\n\n<span class=\"c1\">#TEST_CASE comprar fora do indice</span>\n<span class=\"nv\">$comprar</span><span class=\"w\"> </span><span class=\"m\">4</span>\nfail:<span class=\"w\"> </span>indice<span class=\"w\"> </span>nao<span class=\"w\"> </span>existe\n\n<span class=\"nv\">$troco</span>\nvoce<span class=\"w\"> </span>recebeu<span class=\"w\"> </span><span class=\"m\">1</span>.50<span class=\"w\"> </span>RS\n<span class=\"nv\">$end</span>\n<span class=\"c1\">#__end__</span>\n</code></pre></div>\n<h2>Resolu\u00e7\u00e3o</h2>\n<p>N\u00e3o assista sem antes tentar resolver o problema: <a href=\"https://youtu.be/wabygPIeP2w\">LINK</a></p>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT init\ninit 3\nshow\nend\n======== EXPECT\n$init 3\n$show\nsaldo: 0.00\n0 [   empty : 0 U : 0.00 RS]\n1 [   empty : 0 U : 0.00 RS]\n2 [   empty : 0 U : 0.00 RS]\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT inserindo comida\ninit 3\nshow\nset 2 todinho 3 2.50\nshow\nset 0 tampico 1 1.50\nset 1 xaverde 3 5.00\nshow   \nend\n======== EXPECT\n$init 3\n$show\nsaldo: 0.00\n0 [   empty : 0 U : 0.00 RS]\n1 [   empty : 0 U : 0.00 RS]\n2 [   empty : 0 U : 0.00 RS]\n$set 2 todinho 3 2.50\n$show\nsaldo: 0.00\n0 [   empty : 0 U : 0.00 RS]\n1 [   empty : 0 U : 0.00 RS]\n2 [ todinho : 3 U : 2.50 RS]\n$set 0 tampico 1 1.50\n$set 1 xaverde 3 5.00\n$show   \nsaldo: 0.00\n0 [ tampico : 1 U : 1.50 RS]\n1 [ xaverde : 3 U : 5.00 RS]\n2 [ todinho : 3 U : 2.50 RS]\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT limpando\ninit 3\nshow\nset 2 todinho 3 2.50\nshow\nset 0 tampico 1 1.50\nset 1 xaverde 3 5.00\nshow   \nlimpar 2\nshow\nset 4 ovo 2 4.30\nend\n======== EXPECT\n$init 3\n$show\nsaldo: 0.00\n0 [   empty : 0 U : 0.00 RS]\n1 [   empty : 0 U : 0.00 RS]\n2 [   empty : 0 U : 0.00 RS]\n$set 2 todinho 3 2.50\n$show\nsaldo: 0.00\n0 [   empty : 0 U : 0.00 RS]\n1 [   empty : 0 U : 0.00 RS]\n2 [ todinho : 3 U : 2.50 RS]\n$set 0 tampico 1 1.50\n$set 1 xaverde 3 5.00\n$show   \nsaldo: 0.00\n0 [ tampico : 1 U : 1.50 RS]\n1 [ xaverde : 3 U : 5.00 RS]\n2 [ todinho : 3 U : 2.50 RS]\n$limpar 2\n$show\nsaldo: 0.00\n0 [ tampico : 1 U : 1.50 RS]\n1 [ xaverde : 3 U : 5.00 RS]\n2 [   empty : 0 U : 0.00 RS]\n$set 4 ovo 2 4.30\nfail: indice nao existe\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT dinheiro\ninit 3\nshow\nset 2 todinho 3 2.50\nshow\nset 0 tampico 1 1.50\nset 1 xaverde 3 5.00\nshow   \nlimpar 2\nshow\nset 4 ovo 2 4.30\ndinheiro 5\ndinheiro 4\nshow   \nend\n======== EXPECT\n$init 3\n$show\nsaldo: 0.00\n0 [   empty : 0 U : 0.00 RS]\n1 [   empty : 0 U : 0.00 RS]\n2 [   empty : 0 U : 0.00 RS]\n$set 2 todinho 3 2.50\n$show\nsaldo: 0.00\n0 [   empty : 0 U : 0.00 RS]\n1 [   empty : 0 U : 0.00 RS]\n2 [ todinho : 3 U : 2.50 RS]\n$set 0 tampico 1 1.50\n$set 1 xaverde 3 5.00\n$show   \nsaldo: 0.00\n0 [ tampico : 1 U : 1.50 RS]\n1 [ xaverde : 3 U : 5.00 RS]\n2 [ todinho : 3 U : 2.50 RS]\n$limpar 2\n$show\nsaldo: 0.00\n0 [ tampico : 1 U : 1.50 RS]\n1 [ xaverde : 3 U : 5.00 RS]\n2 [   empty : 0 U : 0.00 RS]\n$set 4 ovo 2 4.30\nfail: indice nao existe\n$dinheiro 5\n$dinheiro 4\n$show   \nsaldo: 9.00\n0 [ tampico : 1 U : 1.50 RS]\n1 [ xaverde : 3 U : 5.00 RS]\n2 [   empty : 0 U : 0.00 RS]\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT troco\ninit 3\nshow\nset 2 todinho 3 2.50\nshow\nset 0 tampico 1 1.50\nset 1 xaverde 3 5.00\nshow   \nlimpar 2\nshow\nset 4 ovo 2 4.30\ndinheiro 5\ndinheiro 4\nshow   \ntroco\nshow\ndinheiro 8\nend\n======== EXPECT\n$init 3\n$show\nsaldo: 0.00\n0 [   empty : 0 U : 0.00 RS]\n1 [   empty : 0 U : 0.00 RS]\n2 [   empty : 0 U : 0.00 RS]\n$set 2 todinho 3 2.50\n$show\nsaldo: 0.00\n0 [   empty : 0 U : 0.00 RS]\n1 [   empty : 0 U : 0.00 RS]\n2 [ todinho : 3 U : 2.50 RS]\n$set 0 tampico 1 1.50\n$set 1 xaverde 3 5.00\n$show   \nsaldo: 0.00\n0 [ tampico : 1 U : 1.50 RS]\n1 [ xaverde : 3 U : 5.00 RS]\n2 [ todinho : 3 U : 2.50 RS]\n$limpar 2\n$show\nsaldo: 0.00\n0 [ tampico : 1 U : 1.50 RS]\n1 [ xaverde : 3 U : 5.00 RS]\n2 [   empty : 0 U : 0.00 RS]\n$set 4 ovo 2 4.30\nfail: indice nao existe\n$dinheiro 5\n$dinheiro 4\n$show   \nsaldo: 9.00\n0 [ tampico : 1 U : 1.50 RS]\n1 [ xaverde : 3 U : 5.00 RS]\n2 [   empty : 0 U : 0.00 RS]\n$troco\nvoce recebeu 9.00 RS\n$show\nsaldo: 0.00\n0 [ tampico : 1 U : 1.50 RS]\n1 [ xaverde : 3 U : 5.00 RS]\n2 [   empty : 0 U : 0.00 RS]\n$dinheiro 8\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT comprar\ninit 3\nshow\nset 2 todinho 3 2.50\nshow\nset 0 tampico 1 1.50\nset 1 xaverde 3 5.00\nshow   \nlimpar 2\nshow\nset 4 ovo 2 4.30\ndinheiro 5\ndinheiro 4\nshow   \ntroco\nshow\ndinheiro 8\ncomprar 1\nend\n======== EXPECT\n$init 3\n$show\nsaldo: 0.00\n0 [   empty : 0 U : 0.00 RS]\n1 [   empty : 0 U : 0.00 RS]\n2 [   empty : 0 U : 0.00 RS]\n$set 2 todinho 3 2.50\n$show\nsaldo: 0.00\n0 [   empty : 0 U : 0.00 RS]\n1 [   empty : 0 U : 0.00 RS]\n2 [ todinho : 3 U : 2.50 RS]\n$set 0 tampico 1 1.50\n$set 1 xaverde 3 5.00\n$show   \nsaldo: 0.00\n0 [ tampico : 1 U : 1.50 RS]\n1 [ xaverde : 3 U : 5.00 RS]\n2 [ todinho : 3 U : 2.50 RS]\n$limpar 2\n$show\nsaldo: 0.00\n0 [ tampico : 1 U : 1.50 RS]\n1 [ xaverde : 3 U : 5.00 RS]\n2 [   empty : 0 U : 0.00 RS]\n$set 4 ovo 2 4.30\nfail: indice nao existe\n$dinheiro 5\n$dinheiro 4\n$show   \nsaldo: 9.00\n0 [ tampico : 1 U : 1.50 RS]\n1 [ xaverde : 3 U : 5.00 RS]\n2 [   empty : 0 U : 0.00 RS]\n$troco\nvoce recebeu 9.00 RS\n$show\nsaldo: 0.00\n0 [ tampico : 1 U : 1.50 RS]\n1 [ xaverde : 3 U : 5.00 RS]\n2 [   empty : 0 U : 0.00 RS]\n$dinheiro 8\n$comprar 1\nvoce comprou um xaverde\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT comprar sem dinheiro\ninit 3\nshow\nset 2 todinho 3 2.50\nshow\nset 0 tampico 1 1.50\nset 1 xaverde 3 5.00\nshow   \nlimpar 2\nshow\nset 4 ovo 2 4.30\ndinheiro 5\ndinheiro 4\nshow   \ntroco\nshow\ndinheiro 8\ncomprar 1\ncomprar 1\nend\n======== EXPECT\n$init 3\n$show\nsaldo: 0.00\n0 [   empty : 0 U : 0.00 RS]\n1 [   empty : 0 U : 0.00 RS]\n2 [   empty : 0 U : 0.00 RS]\n$set 2 todinho 3 2.50\n$show\nsaldo: 0.00\n0 [   empty : 0 U : 0.00 RS]\n1 [   empty : 0 U : 0.00 RS]\n2 [ todinho : 3 U : 2.50 RS]\n$set 0 tampico 1 1.50\n$set 1 xaverde 3 5.00\n$show   \nsaldo: 0.00\n0 [ tampico : 1 U : 1.50 RS]\n1 [ xaverde : 3 U : 5.00 RS]\n2 [ todinho : 3 U : 2.50 RS]\n$limpar 2\n$show\nsaldo: 0.00\n0 [ tampico : 1 U : 1.50 RS]\n1 [ xaverde : 3 U : 5.00 RS]\n2 [   empty : 0 U : 0.00 RS]\n$set 4 ovo 2 4.30\nfail: indice nao existe\n$dinheiro 5\n$dinheiro 4\n$show   \nsaldo: 9.00\n0 [ tampico : 1 U : 1.50 RS]\n1 [ xaverde : 3 U : 5.00 RS]\n2 [   empty : 0 U : 0.00 RS]\n$troco\nvoce recebeu 9.00 RS\n$show\nsaldo: 0.00\n0 [ tampico : 1 U : 1.50 RS]\n1 [ xaverde : 3 U : 5.00 RS]\n2 [   empty : 0 U : 0.00 RS]\n$dinheiro 8\n$comprar 1\nvoce comprou um xaverde\n$comprar 1\nfail: saldo insuficiente\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT comprar\ninit 3\nshow\nset 2 todinho 3 2.50\nshow\nset 0 tampico 1 1.50\nset 1 xaverde 3 5.00\nshow   \nlimpar 2\nshow\nset 4 ovo 2 4.30\ndinheiro 5\ndinheiro 4\nshow   \ntroco\nshow\ndinheiro 8\ncomprar 1\ncomprar 1\ncomprar 0\nshow\nend\n======== EXPECT\n$init 3\n$show\nsaldo: 0.00\n0 [   empty : 0 U : 0.00 RS]\n1 [   empty : 0 U : 0.00 RS]\n2 [   empty : 0 U : 0.00 RS]\n$set 2 todinho 3 2.50\n$show\nsaldo: 0.00\n0 [   empty : 0 U : 0.00 RS]\n1 [   empty : 0 U : 0.00 RS]\n2 [ todinho : 3 U : 2.50 RS]\n$set 0 tampico 1 1.50\n$set 1 xaverde 3 5.00\n$show   \nsaldo: 0.00\n0 [ tampico : 1 U : 1.50 RS]\n1 [ xaverde : 3 U : 5.00 RS]\n2 [ todinho : 3 U : 2.50 RS]\n$limpar 2\n$show\nsaldo: 0.00\n0 [ tampico : 1 U : 1.50 RS]\n1 [ xaverde : 3 U : 5.00 RS]\n2 [   empty : 0 U : 0.00 RS]\n$set 4 ovo 2 4.30\nfail: indice nao existe\n$dinheiro 5\n$dinheiro 4\n$show   \nsaldo: 9.00\n0 [ tampico : 1 U : 1.50 RS]\n1 [ xaverde : 3 U : 5.00 RS]\n2 [   empty : 0 U : 0.00 RS]\n$troco\nvoce recebeu 9.00 RS\n$show\nsaldo: 0.00\n0 [ tampico : 1 U : 1.50 RS]\n1 [ xaverde : 3 U : 5.00 RS]\n2 [   empty : 0 U : 0.00 RS]\n$dinheiro 8\n$comprar 1\nvoce comprou um xaverde\n$comprar 1\nfail: saldo insuficiente\n$comprar 0\nvoce comprou um tampico\n$show\nsaldo: 1.50\n0 [ tampico : 0 U : 1.50 RS]\n1 [ xaverde : 2 U : 5.00 RS]\n2 [   empty : 0 U : 0.00 RS]\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT comprar sem produtos\ninit 3\nshow\nset 2 todinho 3 2.50\nshow\nset 0 tampico 1 1.50\nset 1 xaverde 3 5.00\nshow   \nlimpar 2\nshow\nset 4 ovo 2 4.30\ndinheiro 5\ndinheiro 4\nshow   \ntroco\nshow\ndinheiro 8\ncomprar 1\ncomprar 1\ncomprar 0\nshow\ncomprar 0\nend\n======== EXPECT\n$init 3\n$show\nsaldo: 0.00\n0 [   empty : 0 U : 0.00 RS]\n1 [   empty : 0 U : 0.00 RS]\n2 [   empty : 0 U : 0.00 RS]\n$set 2 todinho 3 2.50\n$show\nsaldo: 0.00\n0 [   empty : 0 U : 0.00 RS]\n1 [   empty : 0 U : 0.00 RS]\n2 [ todinho : 3 U : 2.50 RS]\n$set 0 tampico 1 1.50\n$set 1 xaverde 3 5.00\n$show   \nsaldo: 0.00\n0 [ tampico : 1 U : 1.50 RS]\n1 [ xaverde : 3 U : 5.00 RS]\n2 [ todinho : 3 U : 2.50 RS]\n$limpar 2\n$show\nsaldo: 0.00\n0 [ tampico : 1 U : 1.50 RS]\n1 [ xaverde : 3 U : 5.00 RS]\n2 [   empty : 0 U : 0.00 RS]\n$set 4 ovo 2 4.30\nfail: indice nao existe\n$dinheiro 5\n$dinheiro 4\n$show   \nsaldo: 9.00\n0 [ tampico : 1 U : 1.50 RS]\n1 [ xaverde : 3 U : 5.00 RS]\n2 [   empty : 0 U : 0.00 RS]\n$troco\nvoce recebeu 9.00 RS\n$show\nsaldo: 0.00\n0 [ tampico : 1 U : 1.50 RS]\n1 [ xaverde : 3 U : 5.00 RS]\n2 [   empty : 0 U : 0.00 RS]\n$dinheiro 8\n$comprar 1\nvoce comprou um xaverde\n$comprar 1\nfail: saldo insuficiente\n$comprar 0\nvoce comprou um tampico\n$show\nsaldo: 1.50\n0 [ tampico : 0 U : 1.50 RS]\n1 [ xaverde : 2 U : 5.00 RS]\n2 [   empty : 0 U : 0.00 RS]\n$comprar 0\nfail: espiral sem produtos\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT comprar fora do indice\ninit 3\nshow\nset 2 todinho 3 2.50\nshow\nset 0 tampico 1 1.50\nset 1 xaverde 3 5.00\nshow   \nlimpar 2\nshow\nset 4 ovo 2 4.30\ndinheiro 5\ndinheiro 4\nshow   \ntroco\nshow\ndinheiro 8\ncomprar 1\ncomprar 1\ncomprar 0\nshow\ncomprar 0\ncomprar 4\ntroco\nend\n======== EXPECT\n$init 3\n$show\nsaldo: 0.00\n0 [   empty : 0 U : 0.00 RS]\n1 [   empty : 0 U : 0.00 RS]\n2 [   empty : 0 U : 0.00 RS]\n$set 2 todinho 3 2.50\n$show\nsaldo: 0.00\n0 [   empty : 0 U : 0.00 RS]\n1 [   empty : 0 U : 0.00 RS]\n2 [ todinho : 3 U : 2.50 RS]\n$set 0 tampico 1 1.50\n$set 1 xaverde 3 5.00\n$show   \nsaldo: 0.00\n0 [ tampico : 1 U : 1.50 RS]\n1 [ xaverde : 3 U : 5.00 RS]\n2 [ todinho : 3 U : 2.50 RS]\n$limpar 2\n$show\nsaldo: 0.00\n0 [ tampico : 1 U : 1.50 RS]\n1 [ xaverde : 3 U : 5.00 RS]\n2 [   empty : 0 U : 0.00 RS]\n$set 4 ovo 2 4.30\nfail: indice nao existe\n$dinheiro 5\n$dinheiro 4\n$show   \nsaldo: 9.00\n0 [ tampico : 1 U : 1.50 RS]\n1 [ xaverde : 3 U : 5.00 RS]\n2 [   empty : 0 U : 0.00 RS]\n$troco\nvoce recebeu 9.00 RS\n$show\nsaldo: 0.00\n0 [ tampico : 1 U : 1.50 RS]\n1 [ xaverde : 3 U : 5.00 RS]\n2 [   empty : 0 U : 0.00 RS]\n$dinheiro 8\n$comprar 1\nvoce comprou um xaverde\n$comprar 1\nfail: saldo insuficiente\n$comprar 0\nvoce comprou um tampico\n$show\nsaldo: 1.50\n0 [ tampico : 0 U : 1.50 RS]\n1 [ xaverde : 2 U : 5.00 RS]\n2 [   empty : 0 U : 0.00 RS]\n$comprar 0\nfail: espiral sem produtos\n$comprar 4\nfail: indice nao existe\n$troco\nvoce recebeu 1.50 RS\n$end\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {
        "ts": [
            {
                "name": "shell.ts",
                "contents": "const input = () => \"\"; // MODO_TESTE\nexport { };\n\n\nfunction main() {\n    while (true) {\n        let line = input();\n        console.log(\"$\" + line);\n\n        let args = line.split(\" \");\n        let cmd = args[0];\n\n        if (cmd == \"show\") {\n        } else if (cmd == \"init\") {\n            // let qtd_espirais = parseInt(args[1]);\n        } else if (cmd == \"limpar\") {\n            // let indice = parseInt(args[1]);\n        } else if (cmd == \"dinheiro\") {\n            // let value = parseFloat(args[1]);\n        } else if (cmd == \"comprar\") {\n            // let ind = parseInt(args[1]);\n        } else if (cmd == \"set\") {\n            // let indice = parseInt(args[1]);\n            // let nome = args[2];\n            // let qtd = parseInt(args[3]);\n            // let preco = parseFloat(args[4]);\n        } else if (cmd == \"troco\") {\n        } else if (cmd == \"end\") {\n            break;\n        } else {\n            console.log(\"comando invalido\");\n        }\n    }\n}\n\nmain();\n",
                "type": "show"
            }
        ],
        "java": [
            {
                "name": "Shell.java",
                "contents": "import java.util.*;\n\npublic class Shell {\n\n    static Scanner scanner = new Scanner(System.in);\n    public static void main(String[] args) {\n\n        while (true) {\n            String line = scanner.nextLine();\n            System.out.println(\"$\" + line);\n\n            String[] argsSplit = line.split(\" \");\n            String cmd = argsSplit[0];\n\n            if (cmd.equals(\"end\")) {\n                break;\n            } else if (cmd.equals(\"show\")) {\n            } else if (cmd.equals(\"init\")) {\n                // int qtdEspirais = Integer.parseInt(argsSplit[1]);\n            } else if (cmd.equals(\"limpar\")) {\n                // int indice = Integer.parseInt(argsSplit[1]);\n            } else if (cmd.equals(\"dinheiro\")) {\n                // double value = Double.parseDouble(argsSplit[1]);\n            } else if (cmd.equals(\"comprar\")) {\n                // int ind = Integer.parseInt(argsSplit[1]);\n            } else if (cmd.equals(\"set\")) {\n                // int indice = Integer.parseInt(argsSplit[1]);\n                // String nome = argsSplit[2];\n                // int qtd = Integer.parseInt(argsSplit[3]);\n                // double preco = Double.parseDouble(argsSplit[4]);\n            } else if (cmd.equals(\"troco\")) {\n                // double troco = machine.pedirTroco();\n            } else {\n                System.out.println(\"comando invalido\");\n            }\n        }\n    }\n}\n",
                "type": "show"
            }
        ],
        "cpp": [
            {
                "name": "shell.cpp",
                "contents": "#include <iostream>\n#include <vector>\n#include <sstream>\n#include <iomanip>\nusing namespace std;\n\ntemplate<typename CONTAINER, typename FUNC>\nstring map_join(const CONTAINER& cont, FUNC func, string delim) {\n    stringstream ss;\n    for (auto it = cont.begin(); it != cont.end(); it++) {\n        ss << (it == cont.begin() ? \"\" : delim);\n        ss << func(*it);\n    }\n    return ss.str();\n}\n\n\nint main() {\n    while (true) {\n        string line, cmd;\n        getline(cin, line);\n        cout << \"$\" << line << endl;\n\n        stringstream ss(line);\n        ss >> cmd;\n\n        try {\n            if (cmd == \"show\") {\n                // IMPRIMIR\n            } else if (cmd == \"init\") {\n                // int n_espirais {};\n                // ss >> n_espirais;\n            } else if (cmd == \"limpar\") {\n                // int indice {};\n                // ss >> indice;\n            } else if (cmd == \"dinheiro\") {\n                // int value {};\n                // ss >> value;\n            } else if (cmd == \"comprar\") {\n                // int index {};\n                // ss >> index;\n            } else if (cmd == \"set\") {\n                // int index {};\n                // string name;\n                // int qtd {};\n                // double price {};\n                // ss >> index >> name >> qtd >> price;\n            } else if (cmd == \"troco\") {\n            } else if (cmd == \"end\") {\n                break;\n            } else {\n                cout << \"comando invalido\" << endl;\n            }\n        } catch (const char* e) {\n            cout << e << endl;\n        }\n    }\n}\n",
                "type": "show"
            }
        ]
    }
}
