{
    "title": "@tarifas: Opera\u00e7\u00f5es de saque, dep\u00f3sito, extrato",
    "description": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>@tarifas: Opera\u00e7\u00f5es de saque, dep\u00f3sito, extrato</title>\n    <style>\n        body { font-family: sans-serif; line-height: 1.6; margin: 20px; }\n        pre { background-color: #f4f4f4; padding: 10px; border-radius: 5px; overflow-x: auto; }\n        code { font-family: monospace; }\n        table { border-collapse: collapse; width: 100%; }\n        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n        th { background-color: #f2f2f2; }\n        /* Estilos b\u00e1sicos para o destaque de sintaxe (gerado pelo pygments via pymdownx.highlight) */\n        .highlight .hll { background-color: #ffffcc }\n        .highlight .c { color: #999988; font-style: italic } /* Comment */\n        .highlight .err { color: #a61717; background-color: #e3d2d2 } /* Error */\n        .highlight .k { color: #000000; font-weight: bold } /* Keyword */\n        .highlight .o { color: #000000; font-weight: bold } /* Operator */\n        .highlight .ch { color: #999988; font-style: italic } /* Comment.Hashbang */\n        .highlight .cm { color: #999988; font-style: italic } /* Comment.Multiline */\n        .highlight .cp { color: #999999; font-weight: bold; font-style: italic } /* Comment.Preproc */\n        .highlight .cpf { color: #999988; font-style: italic } /* Comment.PreprocFile */\n        .highlight .c1 { color: #999988; font-style: italic } /* Comment.Single */\n        .highlight .cs { color: #999999; font-weight: bold; font-style: italic } /* Comment.Special */\n        .highlight .gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */\n        .highlight .ge { color: #000000; font-style: italic } /* Generic.Emph */\n        .highlight .gr { color: #aa0000 } /* Generic.Error */\n        .highlight .gh { color: #999999 } /* Generic.Heading */\n        .highlight .gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */\n        .highlight .go { color: #888888 } /* Generic.Output */\n        .highlight .gp { color: #555555 } /* Generic.Prompt */\n        .highlight .gs { font-weight: bold } /* Generic.Strong */\n        .highlight .gu { color: #aaaaaa } /* Generic.Subheading */\n        .highlight .gt { color: #aa0000 } /* Generic.Traceback */\n        .highlight .kc { color: #000000; font-weight: bold } /* Keyword.Constant */\n        .highlight .kd { color: #000000; font-weight: bold } /* Keyword.Declaration */\n        .highlight .kn { color: #000000; font-weight: bold } /* Keyword.Namespace */\n        .highlight .kp { color: #000000; font-weight: bold } /* Keyword.Pseudo */\n        .highlight .kr { color: #000000; font-weight: bold } /* Keyword.Reserved */\n        .highlight .kt { color: #445588; font-weight: bold } /* Keyword.Type */\n        .highlight .m { color: #009999 } /* Literal.Number */\n        .highlight .s { color: #dd1144 } /* Literal.String */\n        .highlight .na { color: #008080 } /* Name.Attribute */\n        .highlight .nb { color: #0086B3 } /* Name.Builtin */\n        .highlight .nc { color: #445588; font-weight: bold } /* Name.Class */\n        .highlight .no { color: #008080 } /* Name.Constant */\n        .highlight .nd { color: #3c5d5d; font-weight: bold } /* Name.Decorator */\n        .highlight .ni { color: #800080 } /* Name.Entity */\n        .highlight .ne { color: #990000; font-weight: bold } /* Name.Exception */\n        .highlight .nf { color: #990000; font-weight: bold } /* Name.Function */\n        .highlight .nl { color: #990000; font-weight: bold } /* Name.Label */\n        .highlight .nn { color: #555555; font-weight: bold } /* Name.Namespace */\n        .highlight .nx { color: #990000; font-weight: bold } /* Name.Other */\n        .highlight .py { color: #009999 } /* Name.Property */\n        .highlight .p { color: #000000 } /* Name.Punctuation */\n        .highlight .nv { color: #008080 } /* Name.Variable */\n        .highlight .ow { color: #000000; font-weight: bold } /* Operator.Word */\n        .highlight .w { color: #bbbbbb } /* Text.Whitespace */\n        .highlight .mf { color: #009999 } /* Literal.Number.Float */\n        .highlight .mh { color: #009999 } /* Literal.Number.Hex */\n        .highlight .mi { color: #009999 } /* Literal.Number.Integer */\n        .highlight .mo { color: #009999 } /* Literal.Number.Oct */\n        .highlight .sb { color: #dd1144 } /* Literal.String.Backtick */\n        .highlight .sc { color: #dd1144 } /* Literal.String.Char */\n        .highlight .sd { color: #dd1144 } /* Literal.String.Doc */\n        .highlight .s2 { color: #dd1144 } /* Literal.String.Double */\n        .highlight .se { color: #dd1144 } /* Literal.String.Escape */\n        .highlight .sh { color: #dd1144 } /* Literal.String.Heredoc */\n        .highlight .si { color: #dd1144 } /* Literal.String.Interpol */\n        .highlight .sx { color: #dd1144 } /* Literal.String.Other */\n        .highlight .sr { color: #009926 } /* Literal.String.Regex */\n        .highlight .s1 { color: #dd1144 } /* Literal.String.Single */\n        .highlight .ss { color: #dd1144 } /* Literal.String.Symbol */\n        .highlight .bp { color: #0086B3 } /* Name.Builtin.Pseudo */\n        .highlight .vc { color: #008080 } /* Name.Variable.Class */\n        .highlight .vg { color: #008080 } /* Name.Variable.Global */\n        .highlight .vi { color: #008080 } /* Name.Variable.Instance */\n        .highlight .il { color: #009999 } /* Literal.Number.Integer.Long */\n    </style>\n    <script type=\"text/javascript\" async\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML\">\n    </script>\n</head>\n<body>\n<h1>Opera\u00e7\u00f5es de saque, dep\u00f3sito, extrato</h1>\n<!-- toch -->\n<table>\n<thead>\n<tr>\n<th><a href=\"#intro\">Intro</a></th>\n<th><a href=\"#draft\">Draft</a></th>\n<th><a href=\"#guide\">Guide</a></th>\n<th><a href=\"#shell\">Shell</a></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<!-- toch -->\n\n<p><img alt=\"cover\" src=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/tarifas/cover.jpg\" /></p>\n<p>O objetivo dessa atividade \u00e9 implementar uma classe respons\u00e1vel por gerenciar a account banc\u00e1ria de um \u00fanico cliente. Faremos opera\u00e7\u00f5es de withdraw, dep\u00f3sito e extrato.</p>\n<h2>Intro</h2>\n<ul>\n<li><strong>Iniciar</strong><ul>\n<li>Iniciar a account passando n\u00famero da account.</li>\n<li>Se a account j\u00e1 existir, resete todos os valores para uma nova account.</li>\n<li>Inicia a account com a opera\u00e7\u00e3o de \"abertura\".</li>\n<li>Para facilitar a visualiza\u00e7\u00e3o dos dados, utilize inteiros para registrar as opera\u00e7\u00f5es financeiras.</li>\n</ul>\n</li>\n<li><strong>Saque, Dep\u00f3sito e Tarifas</strong><ul>\n<li>Verifique se o valor \u00e9 v\u00e1lido.</li>\n<li>No caso da tarifa, o valor final de saldo poder\u00e1 ser negativo.</li>\n<li>No caso do saque, verifique se h\u00e1 saldo suficiente efetuar a opera\u00e7\u00e3o.</li>\n</ul>\n</li>\n<li><strong>Retornar o extrato</strong>.<ul>\n<li>Retornar todas as movimenta\u00e7\u00f5es da conta.</li>\n<li>A descri\u00e7\u00e3o pode ser \"opening\", \"withdraw\", \"deposit\", \"fee\", \"reverse\", \"error\".</li>\n<li>Os saques devem ter valor negativo e os dep\u00f3sitos positivos.</li>\n<li>Se a quantidade for fornecida, retorne apenas as \u00faltimas movimenta\u00e7\u00f5es.</li>\n</ul>\n</li>\n<li><strong>Extornar tarifas</strong>.<ul>\n<li>Deve ser poss\u00edvel extornar, pagando de volta, tarifas passando uma lista de \u00edndices.</li>\n<li>Apenas efetue a opera\u00e7\u00e3o de extorno dos \u00edndices v\u00e1lidos que forem tarifas.</li>\n</ul>\n</li>\n</ul>\n<hr />\n<h2>Draft</h2>\n<ul>\n<li><a href=\"https://github.com/qxcodepoo/arcade/blob/master/base/tarifas/.cache/draft.cpp\">draft.cpp</a></li>\n<li><a href=\"https://github.com/qxcodepoo/arcade/blob/master/base/tarifas/.cache/draft.java\">draft.java</a></li>\n<li><a href=\"https://github.com/qxcodepoo/arcade/blob/master/base/tarifas/.cache/draft.ts\">draft.ts</a></li>\n</ul>\n<h2>Guide</h2>\n<p><img alt=\"diagrama\" src=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/tarifas/diagrama.png\" /></p>\n<p><a href=\"https://youtu.be/KrjZsvprPq8?si=Jkc_90NZ6DrKElMH\"><img alt=\"youtube icon\" src=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/tarifas/../youguide.png\" /></a></p>\n<!-- load diagrama.puml fenced=ts:filter -->\n\n<div class=\"language-ts highlight\"><pre><span></span><code><span class=\"kd\">@startuml</span>\n\n<span class=\"nx\">skinparam</span><span class=\"w\"> </span><span class=\"nx\">defaultFontName</span><span class=\"w\"> </span><span class=\"s2\">&quot;Source Code Pro&quot;</span>\n<span class=\"nx\">skinparam</span><span class=\"w\"> </span><span class=\"nx\">dpi</span><span class=\"w\"> </span><span class=\"mf\">150</span>\n\n\n\n<span class=\"kd\">enum</span><span class=\"w\"> </span><span class=\"nx\">Label</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">DEPOSIT</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"k\">static</span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">FEE</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"k\">static</span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">OPENING</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"k\">static</span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">REVERSE</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"k\">static</span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">WITHDRAW</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"k\">static</span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">ERROR</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"k\">static</span><span class=\"p\">}</span>\n\n<span class=\"w\">  </span><span class=\"nx\">__</span>\n<span class=\"w\">    </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"nx\">label</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">String</span>\n<span class=\"w\">    </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"nx\">Label</span><span class=\"p\">(</span><span class=\"nx\">label</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">String</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"nx\">__</span>\n<span class=\"w\">  </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">getLabel</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nb\">String</span>\n<span class=\"p\">}</span>\n\n<span class=\"s1\">&#39; opera\u00e7\u00e3o guarda os dados de uma \u00fanica opera\u00e7\u00e3o</span>\n<span class=\"s1\">class Operation {</span>\n<span class=\"s1\">    - index : int</span>\n<span class=\"s1\">    - label : Label</span>\n<span class=\"s1\">  &#39;</span><span class=\"w\"> </span><span class=\"nx\">valor</span><span class=\"w\"> </span><span class=\"nx\">em</span><span class=\"w\"> </span><span class=\"nx\">negativo</span><span class=\"w\"> </span><span class=\"nx\">se</span><span class=\"w\"> </span><span class=\"nx\">estiver</span><span class=\"w\"> </span><span class=\"nx\">diminuindo</span><span class=\"w\"> </span><span class=\"nx\">o</span><span class=\"w\"> </span><span class=\"nx\">saldo</span>\n<span class=\"w\">    </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"nx\">value</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">int</span>\n<span class=\"w\">  </span><span class=\"s1\">&#39; saldo residual apos opera\u00e7\u00e3o</span>\n<span class=\"s1\">    - balance : int</span>\n<span class=\"s1\">  __</span>\n<span class=\"s1\">  + Operation(index : int, label : Label, value : int, balance : int)</span>\n\n<span class=\"s1\">  + toString() : String</span>\n<span class=\"s1\">  __</span>\n<span class=\"s1\">  + getBalance() : int</span>\n<span class=\"s1\">  + getIndex() : int</span>\n<span class=\"s1\">  + getLabel() : Label</span>\n<span class=\"s1\">  + getValue() : int</span>\n<span class=\"s1\">}</span>\n\n<span class=\"s1\">&#39;</span><span class=\"w\"> </span><span class=\"nx\">nessa</span><span class=\"w\"> </span><span class=\"nx\">classe</span><span class=\"w\"> </span><span class=\"nx\">s\u00e3o</span><span class=\"w\"> </span><span class=\"nx\">efetivadas</span><span class=\"w\"> </span><span class=\"nx\">e</span><span class=\"w\"> </span><span class=\"nx\">registradas</span><span class=\"w\"> </span><span class=\"kr\">as</span><span class=\"w\"> </span><span class=\"nx\">altera\u00e7\u00f5es</span><span class=\"w\"> </span><span class=\"nx\">no</span><span class=\"w\"> </span><span class=\"nx\">saldo</span>\n<span class=\"kd\">class</span><span class=\"w\"> </span><span class=\"nx\">BalanceManager</span><span class=\"w\"> </span><span class=\"p\">{</span>\n\n<span class=\"w\">  </span><span class=\"s1\">&#39; saldo do cliente</span>\n<span class=\"s1\">    - balance : int </span>\n\n<span class=\"s1\">  &#39;</span><span class=\"w\"> </span><span class=\"nx\">extrato</span>\n<span class=\"w\">    </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"nx\">extract</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"o\">&lt;</span><span class=\"nx\">Operation</span><span class=\"o\">&gt;</span>\n\n<span class=\"w\">  </span><span class=\"s1\">&#39; id da pr\u00f3xima opera\u00e7\u00e3o</span>\n<span class=\"s1\">    - nextId : int</span>\n<span class=\"s1\">  __</span>\n<span class=\"s1\">  + BalanceManager()</span>\n\n<span class=\"s1\">  &#39;</span><span class=\"w\"> </span><span class=\"nx\">adiciona</span><span class=\"w\"> </span><span class=\"nx\">value</span><span class=\"w\"> </span><span class=\"nx\">ao</span><span class=\"w\"> </span><span class=\"nx\">balance</span>\n<span class=\"w\">  </span><span class=\"s1\">&#39; crie opera\u00e7\u00e3o e adicione ao vetor de opera\u00e7\u00f5es</span>\n<span class=\"s1\">  &#39;</span><span class=\"w\"> </span><span class=\"nx\">incrementa</span><span class=\"w\"> </span><span class=\"nx\">o</span><span class=\"w\"> </span><span class=\"nx\">nextId</span>\n<span class=\"w\">  </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">addOperation</span><span class=\"p\">(</span><span class=\"nx\">label</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Label</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">value</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"s1\">&#39;</span>\n<span class=\"s1\">  &#39;</span><span class=\"w\"> </span><span class=\"nx\">retorna</span><span class=\"w\"> </span><span class=\"nx\">a</span><span class=\"w\"> </span><span class=\"nx\">opera\u00e7\u00e3o</span><span class=\"w\"> </span><span class=\"nx\">caso</span><span class=\"w\"> </span><span class=\"nx\">o</span><span class=\"w\"> </span><span class=\"nx\">\u00edndice</span><span class=\"w\"> </span><span class=\"nx\">seja</span><span class=\"w\"> </span><span class=\"nx\">v\u00e1lido</span>\n<span class=\"w\">  </span><span class=\"s1\">&#39; retorna uma opera\u00e7\u00e3o com label ERROR caso contr\u00e1rio</span>\n<span class=\"s1\">  + getOperation(index : int) : Operation</span>\n<span class=\"s1\">  &#39;</span>\n<span class=\"w\">  </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">toString</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nb\">String</span>\n<span class=\"w\">  </span><span class=\"nx\">__</span>\n<span class=\"w\">  </span><span class=\"s1\">&#39;</span>\n<span class=\"s1\">  &#39;</span><span class=\"w\"> </span><span class=\"nx\">retorna</span><span class=\"w\"> </span><span class=\"nx\">o</span><span class=\"w\"> </span><span class=\"nx\">saldo</span><span class=\"w\"> </span><span class=\"nx\">atual</span>\n<span class=\"w\">  </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">getBalance</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kr\">int</span>\n\n<span class=\"w\">  </span><span class=\"s1\">&#39; se qtdOp for 0, retorne todas as opera\u00e7\u00f5es</span>\n<span class=\"s1\">  &#39;</span><span class=\"w\"> </span><span class=\"nx\">se</span><span class=\"w\"> </span><span class=\"nx\">qtdOp</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"nx\">positivo</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">retorne</span><span class=\"w\"> </span><span class=\"kr\">as</span><span class=\"w\"> </span><span class=\"nx\">\u00faltimas</span><span class=\"w\"> </span><span class=\"nx\">qtdOp</span><span class=\"w\"> </span><span class=\"nx\">opera\u00e7\u00f5es</span>\n<span class=\"w\">  </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">getExtract</span><span class=\"p\">(</span><span class=\"nx\">qtdOp</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">List</span><span class=\"o\">&lt;</span><span class=\"nx\">Operation</span><span class=\"o\">&gt;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">class</span><span class=\"w\"> </span><span class=\"nx\">Account</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"nx\">balanceManager</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">BalanceManager</span>\n<span class=\"w\">    </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"nx\">id</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">int</span>\n<span class=\"w\">  </span><span class=\"nx\">__</span>\n<span class=\"w\">  </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">Account</span><span class=\"p\">(</span><span class=\"nx\">id</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"p\">)</span>\n\n<span class=\"w\">  </span><span class=\"s1\">&#39; adiciona valor \u00e0 conta</span>\n<span class=\"s1\">  + deposit(value : int) : void</span>\n\n<span class=\"s1\">  &#39;</span><span class=\"w\"> </span><span class=\"nx\">retira</span><span class=\"w\"> </span><span class=\"nx\">o</span><span class=\"w\"> </span><span class=\"nx\">dinheiro</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">mesmo</span><span class=\"w\"> </span><span class=\"nx\">que</span><span class=\"w\"> </span><span class=\"nx\">o</span><span class=\"w\"> </span><span class=\"nx\">balance</span><span class=\"w\"> </span><span class=\"nx\">fique</span><span class=\"w\"> </span><span class=\"nx\">negativo</span>\n<span class=\"w\">  </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">fee</span><span class=\"p\">(</span><span class=\"nx\">value</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"ow\">void</span>\n\n<span class=\"w\">  </span><span class=\"s1\">&#39; se o \u00edndice for v\u00e1lido e representar uma opera\u00e7\u00e3o de tarifa</span>\n<span class=\"s1\">  &#39;</span><span class=\"w\"> </span><span class=\"nx\">adicione</span><span class=\"w\"> </span><span class=\"nx\">o</span><span class=\"w\"> </span><span class=\"nx\">mesmo</span><span class=\"w\"> </span><span class=\"nx\">valor</span><span class=\"w\"> </span><span class=\"nx\">tarifado</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">mas</span><span class=\"w\"> </span><span class=\"nx\">com</span><span class=\"w\"> </span><span class=\"nx\">label</span><span class=\"w\"> </span><span class=\"nx\">de</span><span class=\"w\"> </span><span class=\"nx\">reverse</span><span class=\"p\">(</span><span class=\"nx\">extorno</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">reverse</span><span class=\"p\">(</span><span class=\"nx\">index</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"ow\">void</span>\n\n<span class=\"w\">  </span><span class=\"s1\">&#39; s\u00f3 realiza a opera\u00e7\u00e3o se houver dinheiro suficiente na conta</span>\n<span class=\"s1\">  + withdraw(value : int) : void</span>\n<span class=\"s1\">  + toString() : String</span>\n<span class=\"s1\">  __</span>\n<span class=\"s1\">  &#39;</span><span class=\"w\"> </span><span class=\"nx\">em</span><span class=\"w\"> </span><span class=\"nx\">c</span><span class=\"o\">++</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">retorne</span><span class=\"w\"> </span><span class=\"nx\">a</span><span class=\"w\"> </span><span class=\"nx\">referencia</span>\n<span class=\"w\">  </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">getBalanceManager</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">BalanceManager</span>\n<span class=\"p\">}</span>\n\n\n\n\n<span class=\"nx\">Operation</span><span class=\"w\"> </span><span class=\"s2\">&quot;1&quot;</span><span class=\"w\"> </span><span class=\"o\">*--&gt;</span><span class=\"w\">  </span><span class=\"s2\">&quot;1&quot;</span><span class=\"w\"> </span><span class=\"nx\">Label</span>\n<span class=\"nx\">BalanceManager</span><span class=\"w\"> </span><span class=\"s2\">&quot;1&quot;</span><span class=\"w\"> </span><span class=\"o\">*--&gt;</span><span class=\"w\">  </span><span class=\"s2\">&quot;0..*&quot;</span><span class=\"w\"> </span><span class=\"nx\">Operation</span>\n<span class=\"nx\">Account</span><span class=\"w\"> </span><span class=\"s2\">&quot;1&quot;</span><span class=\"w\"> </span><span class=\"o\">*--&gt;</span><span class=\"w\">  </span><span class=\"s2\">&quot;1&quot;</span><span class=\"w\"> </span><span class=\"nx\">BalanceManager</span>\n<span class=\"kd\">@enduml</span>\n</code></pre></div>\n<!-- load -->\n\n<hr />\n<h2>Shell</h2>\n<div class=\"language-bash highlight\"><pre><span></span><code><span class=\"c1\">#TEST_CASE iniciar</span>\n<span class=\"nv\">$init</span><span class=\"w\"> </span><span class=\"m\">100</span>\n<span class=\"nv\">$show</span>\naccount:100<span class=\"w\"> </span>balance:0\n\n<span class=\"c1\">#TEST_CASE depositar</span>\n<span class=\"nv\">$deposit</span><span class=\"w\"> </span><span class=\"m\">100</span>\n<span class=\"nv\">$show</span>\naccount:100<span class=\"w\"> </span>balance:100\n\n<span class=\"c1\">#TEST_CASE deposito invalido</span>\n<span class=\"nv\">$deposit</span><span class=\"w\"> </span>-10\nfail:<span class=\"w\"> </span>invalid<span class=\"w\"> </span>value\n<span class=\"nv\">$show</span>\naccount:100<span class=\"w\"> </span>balance:100\n\n<span class=\"c1\">#TEST_CASE saque</span>\n<span class=\"nv\">$withdraw</span><span class=\"w\"> </span><span class=\"m\">20</span>\n<span class=\"nv\">$show</span>\naccount:100<span class=\"w\"> </span>balance:80\n\n<span class=\"c1\">#TEST_CASE taxa</span>\n<span class=\"nv\">$fee</span><span class=\"w\"> </span><span class=\"m\">10</span>\n<span class=\"nv\">$show</span>\naccount:100<span class=\"w\"> </span>balance:70\n\n<span class=\"c1\">#TEST_CASE saque muito alto</span>\n<span class=\"nv\">$withdraw</span><span class=\"w\"> </span><span class=\"m\">150</span>\nfail:<span class=\"w\"> </span>insufficient<span class=\"w\"> </span>balance\n<span class=\"nv\">$show</span>\naccount:100<span class=\"w\"> </span>balance:70\n\n<span class=\"nv\">$withdraw</span><span class=\"w\"> </span><span class=\"m\">30</span>\n<span class=\"nv\">$show</span>\naccount:100<span class=\"w\"> </span>balance:40\n\n<span class=\"c1\">#TEST_CASE taxa</span>\n<span class=\"nv\">$fee</span><span class=\"w\"> </span><span class=\"m\">5</span>\n<span class=\"nv\">$show</span>\naccount:100<span class=\"w\"> </span>balance:35\n\n<span class=\"c1\">#__deposito</span>\n<span class=\"nv\">$deposit</span><span class=\"w\"> </span><span class=\"m\">5</span>\n<span class=\"nv\">$fee</span><span class=\"w\"> </span><span class=\"m\">1</span>\n<span class=\"nv\">$show</span>\naccount:100<span class=\"w\"> </span>balance:39\n\n<span class=\"c1\">#TEST_CASE extrato</span>\n<span class=\"c1\">#extrato mostra todas as opera\u00e7\u00f5es desde a abertura da account</span>\n<span class=\"nv\">$extract</span><span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"w\"> </span><span class=\"m\">0</span>:<span class=\"w\">  </span>opening:<span class=\"w\">    </span><span class=\"m\">0</span>:<span class=\"w\">    </span><span class=\"m\">0</span>\n<span class=\"w\"> </span><span class=\"m\">1</span>:<span class=\"w\">  </span>deposit:<span class=\"w\">  </span><span class=\"m\">100</span>:<span class=\"w\">  </span><span class=\"m\">100</span>\n<span class=\"w\"> </span><span class=\"m\">2</span>:<span class=\"w\"> </span>withdraw:<span class=\"w\">  </span>-20:<span class=\"w\">   </span><span class=\"m\">80</span>\n<span class=\"w\"> </span><span class=\"m\">3</span>:<span class=\"w\">      </span>fee:<span class=\"w\">  </span>-10:<span class=\"w\">   </span><span class=\"m\">70</span>\n<span class=\"w\"> </span><span class=\"m\">4</span>:<span class=\"w\"> </span>withdraw:<span class=\"w\">  </span>-30:<span class=\"w\">   </span><span class=\"m\">40</span>\n<span class=\"w\"> </span><span class=\"m\">5</span>:<span class=\"w\">      </span>fee:<span class=\"w\">   </span>-5:<span class=\"w\">   </span><span class=\"m\">35</span>\n<span class=\"w\"> </span><span class=\"m\">6</span>:<span class=\"w\">  </span>deposit:<span class=\"w\">    </span><span class=\"m\">5</span>:<span class=\"w\">   </span><span class=\"m\">40</span>\n<span class=\"w\"> </span><span class=\"m\">7</span>:<span class=\"w\">      </span>fee:<span class=\"w\">   </span>-1:<span class=\"w\">   </span><span class=\"m\">39</span>\n\n<span class=\"c1\">#TEST_CASE extrato n</span>\n<span class=\"c1\">#extrato mostra as ultimas N operacoes</span>\n<span class=\"nv\">$extract</span><span class=\"w\"> </span><span class=\"m\">2</span>\n<span class=\"w\"> </span><span class=\"m\">6</span>:<span class=\"w\">  </span>deposit:<span class=\"w\">    </span><span class=\"m\">5</span>:<span class=\"w\">   </span><span class=\"m\">40</span>\n<span class=\"w\"> </span><span class=\"m\">7</span>:<span class=\"w\">      </span>fee:<span class=\"w\">   </span>-1:<span class=\"w\">   </span><span class=\"m\">39</span>\n\n<span class=\"c1\">#TEST_CASE extornar</span>\n<span class=\"nv\">$reverse</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"w\"> </span><span class=\"m\">5</span><span class=\"w\"> </span><span class=\"m\">7</span><span class=\"w\"> </span><span class=\"m\">50</span>\nfail:<span class=\"w\"> </span>index<span class=\"w\"> </span><span class=\"m\">1</span><span class=\"w\"> </span>is<span class=\"w\"> </span>not<span class=\"w\"> </span>a<span class=\"w\"> </span>fee\nfail:<span class=\"w\"> </span>index<span class=\"w\"> </span><span class=\"m\">50</span><span class=\"w\"> </span>invalid\n\n<span class=\"c1\">#TEST_CASE novo extrato</span>\n<span class=\"nv\">$extract</span><span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"w\"> </span><span class=\"m\">0</span>:<span class=\"w\">  </span>opening:<span class=\"w\">    </span><span class=\"m\">0</span>:<span class=\"w\">    </span><span class=\"m\">0</span>\n<span class=\"w\"> </span><span class=\"m\">1</span>:<span class=\"w\">  </span>deposit:<span class=\"w\">  </span><span class=\"m\">100</span>:<span class=\"w\">  </span><span class=\"m\">100</span>\n<span class=\"w\"> </span><span class=\"m\">2</span>:<span class=\"w\"> </span>withdraw:<span class=\"w\">  </span>-20:<span class=\"w\">   </span><span class=\"m\">80</span>\n<span class=\"w\"> </span><span class=\"m\">3</span>:<span class=\"w\">      </span>fee:<span class=\"w\">  </span>-10:<span class=\"w\">   </span><span class=\"m\">70</span>\n<span class=\"w\"> </span><span class=\"m\">4</span>:<span class=\"w\"> </span>withdraw:<span class=\"w\">  </span>-30:<span class=\"w\">   </span><span class=\"m\">40</span>\n<span class=\"w\"> </span><span class=\"m\">5</span>:<span class=\"w\">      </span>fee:<span class=\"w\">   </span>-5:<span class=\"w\">   </span><span class=\"m\">35</span>\n<span class=\"w\"> </span><span class=\"m\">6</span>:<span class=\"w\">  </span>deposit:<span class=\"w\">    </span><span class=\"m\">5</span>:<span class=\"w\">   </span><span class=\"m\">40</span>\n<span class=\"w\"> </span><span class=\"m\">7</span>:<span class=\"w\">      </span>fee:<span class=\"w\">   </span>-1:<span class=\"w\">   </span><span class=\"m\">39</span>\n<span class=\"w\"> </span><span class=\"m\">8</span>:<span class=\"w\">  </span>reverse:<span class=\"w\">    </span><span class=\"m\">5</span>:<span class=\"w\">   </span><span class=\"m\">44</span>\n<span class=\"w\"> </span><span class=\"m\">9</span>:<span class=\"w\">  </span>reverse:<span class=\"w\">    </span><span class=\"m\">1</span>:<span class=\"w\">   </span><span class=\"m\">45</span>\n\n<span class=\"c1\">#TEST_CASE extrato tarifa</span>\n<span class=\"nv\">$fee</span><span class=\"w\"> </span><span class=\"m\">50</span>\n<span class=\"nv\">$extract</span><span class=\"w\"> </span><span class=\"m\">2</span>\n<span class=\"w\"> </span><span class=\"m\">9</span>:<span class=\"w\">  </span>reverse:<span class=\"w\">    </span><span class=\"m\">1</span>:<span class=\"w\">   </span><span class=\"m\">45</span>\n<span class=\"m\">10</span>:<span class=\"w\">      </span>fee:<span class=\"w\">  </span>-50:<span class=\"w\">   </span>-5\n\n<span class=\"nv\">$end</span>\n</code></pre></div>\n<hr />\n<div class=\"language-bash highlight\"><pre><span></span><code><span class=\"c1\">#TEST_CASE fee</span>\n<span class=\"nv\">$init</span><span class=\"w\"> </span><span class=\"m\">107</span>\n<span class=\"nv\">$fee</span><span class=\"w\"> </span><span class=\"m\">10</span>\n<span class=\"nv\">$show</span>\naccount:107<span class=\"w\"> </span>balance:-10\n<span class=\"nv\">$extract</span><span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"w\"> </span><span class=\"m\">0</span>:<span class=\"w\">  </span>opening:<span class=\"w\">    </span><span class=\"m\">0</span>:<span class=\"w\">    </span><span class=\"m\">0</span>\n<span class=\"w\"> </span><span class=\"m\">1</span>:<span class=\"w\">      </span>fee:<span class=\"w\">  </span>-10:<span class=\"w\">  </span>-10\n<span class=\"nv\">$end</span>\n</code></pre></div>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT iniciar\ninit 100\nshow\nend\n======== EXPECT\n$init 100\n$show\naccount:100 balance:0\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT depositar\ninit 100\nshow\ndeposit 100\nshow\nend\n======== EXPECT\n$init 100\n$show\naccount:100 balance:0\n$deposit 100\n$show\naccount:100 balance:100\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT deposito invalido\ninit 100\nshow\ndeposit 100\nshow\ndeposit -10\nshow\nend\n======== EXPECT\n$init 100\n$show\naccount:100 balance:0\n$deposit 100\n$show\naccount:100 balance:100\n$deposit -10\nfail: invalid value\n$show\naccount:100 balance:100\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT saque\ninit 100\nshow\ndeposit 100\nshow\ndeposit -10\nshow\nwithdraw 20\nshow\nend\n======== EXPECT\n$init 100\n$show\naccount:100 balance:0\n$deposit 100\n$show\naccount:100 balance:100\n$deposit -10\nfail: invalid value\n$show\naccount:100 balance:100\n$withdraw 20\n$show\naccount:100 balance:80\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT taxa\ninit 100\nshow\ndeposit 100\nshow\ndeposit -10\nshow\nwithdraw 20\nshow\nfee 10\nshow\nend\n======== EXPECT\n$init 100\n$show\naccount:100 balance:0\n$deposit 100\n$show\naccount:100 balance:100\n$deposit -10\nfail: invalid value\n$show\naccount:100 balance:100\n$withdraw 20\n$show\naccount:100 balance:80\n$fee 10\n$show\naccount:100 balance:70\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT saque muito alto\ninit 100\nshow\ndeposit 100\nshow\ndeposit -10\nshow\nwithdraw 20\nshow\nfee 10\nshow\nwithdraw 150\nshow\nwithdraw 30\nshow\nend\n======== EXPECT\n$init 100\n$show\naccount:100 balance:0\n$deposit 100\n$show\naccount:100 balance:100\n$deposit -10\nfail: invalid value\n$show\naccount:100 balance:100\n$withdraw 20\n$show\naccount:100 balance:80\n$fee 10\n$show\naccount:100 balance:70\n$withdraw 150\nfail: insufficient balance\n$show\naccount:100 balance:70\n$withdraw 30\n$show\naccount:100 balance:40\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT taxa\ninit 100\nshow\ndeposit 100\nshow\ndeposit -10\nshow\nwithdraw 20\nshow\nfee 10\nshow\nwithdraw 150\nshow\nwithdraw 30\nshow\nfee 5\nshow\ndeposit 5\nfee 1\nshow\nend\n======== EXPECT\n$init 100\n$show\naccount:100 balance:0\n$deposit 100\n$show\naccount:100 balance:100\n$deposit -10\nfail: invalid value\n$show\naccount:100 balance:100\n$withdraw 20\n$show\naccount:100 balance:80\n$fee 10\n$show\naccount:100 balance:70\n$withdraw 150\nfail: insufficient balance\n$show\naccount:100 balance:70\n$withdraw 30\n$show\naccount:100 balance:40\n$fee 5\n$show\naccount:100 balance:35\n$deposit 5\n$fee 1\n$show\naccount:100 balance:39\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT extrato\ninit 100\nshow\ndeposit 100\nshow\ndeposit -10\nshow\nwithdraw 20\nshow\nfee 10\nshow\nwithdraw 150\nshow\nwithdraw 30\nshow\nfee 5\nshow\ndeposit 5\nfee 1\nshow\nextract 0\nend\n======== EXPECT\n$init 100\n$show\naccount:100 balance:0\n$deposit 100\n$show\naccount:100 balance:100\n$deposit -10\nfail: invalid value\n$show\naccount:100 balance:100\n$withdraw 20\n$show\naccount:100 balance:80\n$fee 10\n$show\naccount:100 balance:70\n$withdraw 150\nfail: insufficient balance\n$show\naccount:100 balance:70\n$withdraw 30\n$show\naccount:100 balance:40\n$fee 5\n$show\naccount:100 balance:35\n$deposit 5\n$fee 1\n$show\naccount:100 balance:39\n$extract 0\n 0:  opening:    0:    0\n 1:  deposit:  100:  100\n 2: withdraw:  -20:   80\n 3:      fee:  -10:   70\n 4: withdraw:  -30:   40\n 5:      fee:   -5:   35\n 6:  deposit:    5:   40\n 7:      fee:   -1:   39\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT extrato n\ninit 100\nshow\ndeposit 100\nshow\ndeposit -10\nshow\nwithdraw 20\nshow\nfee 10\nshow\nwithdraw 150\nshow\nwithdraw 30\nshow\nfee 5\nshow\ndeposit 5\nfee 1\nshow\nextract 0\nextract 2\nend\n======== EXPECT\n$init 100\n$show\naccount:100 balance:0\n$deposit 100\n$show\naccount:100 balance:100\n$deposit -10\nfail: invalid value\n$show\naccount:100 balance:100\n$withdraw 20\n$show\naccount:100 balance:80\n$fee 10\n$show\naccount:100 balance:70\n$withdraw 150\nfail: insufficient balance\n$show\naccount:100 balance:70\n$withdraw 30\n$show\naccount:100 balance:40\n$fee 5\n$show\naccount:100 balance:35\n$deposit 5\n$fee 1\n$show\naccount:100 balance:39\n$extract 0\n 0:  opening:    0:    0\n 1:  deposit:  100:  100\n 2: withdraw:  -20:   80\n 3:      fee:  -10:   70\n 4: withdraw:  -30:   40\n 5:      fee:   -5:   35\n 6:  deposit:    5:   40\n 7:      fee:   -1:   39\n$extract 2\n 6:  deposit:    5:   40\n 7:      fee:   -1:   39\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT extornar\ninit 100\nshow\ndeposit 100\nshow\ndeposit -10\nshow\nwithdraw 20\nshow\nfee 10\nshow\nwithdraw 150\nshow\nwithdraw 30\nshow\nfee 5\nshow\ndeposit 5\nfee 1\nshow\nextract 0\nextract 2\nreverse 1 5 7 50\nend\n======== EXPECT\n$init 100\n$show\naccount:100 balance:0\n$deposit 100\n$show\naccount:100 balance:100\n$deposit -10\nfail: invalid value\n$show\naccount:100 balance:100\n$withdraw 20\n$show\naccount:100 balance:80\n$fee 10\n$show\naccount:100 balance:70\n$withdraw 150\nfail: insufficient balance\n$show\naccount:100 balance:70\n$withdraw 30\n$show\naccount:100 balance:40\n$fee 5\n$show\naccount:100 balance:35\n$deposit 5\n$fee 1\n$show\naccount:100 balance:39\n$extract 0\n 0:  opening:    0:    0\n 1:  deposit:  100:  100\n 2: withdraw:  -20:   80\n 3:      fee:  -10:   70\n 4: withdraw:  -30:   40\n 5:      fee:   -5:   35\n 6:  deposit:    5:   40\n 7:      fee:   -1:   39\n$extract 2\n 6:  deposit:    5:   40\n 7:      fee:   -1:   39\n$reverse 1 5 7 50\nfail: index 1 is not a fee\nfail: index 50 invalid\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT novo extrato\ninit 100\nshow\ndeposit 100\nshow\ndeposit -10\nshow\nwithdraw 20\nshow\nfee 10\nshow\nwithdraw 150\nshow\nwithdraw 30\nshow\nfee 5\nshow\ndeposit 5\nfee 1\nshow\nextract 0\nextract 2\nreverse 1 5 7 50\nextract 0\nend\n======== EXPECT\n$init 100\n$show\naccount:100 balance:0\n$deposit 100\n$show\naccount:100 balance:100\n$deposit -10\nfail: invalid value\n$show\naccount:100 balance:100\n$withdraw 20\n$show\naccount:100 balance:80\n$fee 10\n$show\naccount:100 balance:70\n$withdraw 150\nfail: insufficient balance\n$show\naccount:100 balance:70\n$withdraw 30\n$show\naccount:100 balance:40\n$fee 5\n$show\naccount:100 balance:35\n$deposit 5\n$fee 1\n$show\naccount:100 balance:39\n$extract 0\n 0:  opening:    0:    0\n 1:  deposit:  100:  100\n 2: withdraw:  -20:   80\n 3:      fee:  -10:   70\n 4: withdraw:  -30:   40\n 5:      fee:   -5:   35\n 6:  deposit:    5:   40\n 7:      fee:   -1:   39\n$extract 2\n 6:  deposit:    5:   40\n 7:      fee:   -1:   39\n$reverse 1 5 7 50\nfail: index 1 is not a fee\nfail: index 50 invalid\n$extract 0\n 0:  opening:    0:    0\n 1:  deposit:  100:  100\n 2: withdraw:  -20:   80\n 3:      fee:  -10:   70\n 4: withdraw:  -30:   40\n 5:      fee:   -5:   35\n 6:  deposit:    5:   40\n 7:      fee:   -1:   39\n 8:  reverse:    5:   44\n 9:  reverse:    1:   45\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT extrato tarifa\ninit 100\nshow\ndeposit 100\nshow\ndeposit -10\nshow\nwithdraw 20\nshow\nfee 10\nshow\nwithdraw 150\nshow\nwithdraw 30\nshow\nfee 5\nshow\ndeposit 5\nfee 1\nshow\nextract 0\nextract 2\nreverse 1 5 7 50\nextract 0\nfee 50\nextract 2\nend\n======== EXPECT\n$init 100\n$show\naccount:100 balance:0\n$deposit 100\n$show\naccount:100 balance:100\n$deposit -10\nfail: invalid value\n$show\naccount:100 balance:100\n$withdraw 20\n$show\naccount:100 balance:80\n$fee 10\n$show\naccount:100 balance:70\n$withdraw 150\nfail: insufficient balance\n$show\naccount:100 balance:70\n$withdraw 30\n$show\naccount:100 balance:40\n$fee 5\n$show\naccount:100 balance:35\n$deposit 5\n$fee 1\n$show\naccount:100 balance:39\n$extract 0\n 0:  opening:    0:    0\n 1:  deposit:  100:  100\n 2: withdraw:  -20:   80\n 3:      fee:  -10:   70\n 4: withdraw:  -30:   40\n 5:      fee:   -5:   35\n 6:  deposit:    5:   40\n 7:      fee:   -1:   39\n$extract 2\n 6:  deposit:    5:   40\n 7:      fee:   -1:   39\n$reverse 1 5 7 50\nfail: index 1 is not a fee\nfail: index 50 invalid\n$extract 0\n 0:  opening:    0:    0\n 1:  deposit:  100:  100\n 2: withdraw:  -20:   80\n 3:      fee:  -10:   70\n 4: withdraw:  -30:   40\n 5:      fee:   -5:   35\n 6:  deposit:    5:   40\n 7:      fee:   -1:   39\n 8:  reverse:    5:   44\n 9:  reverse:    1:   45\n$fee 50\n$extract 2\n 9:  reverse:    1:   45\n10:      fee:  -50:   -5\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT fee\ninit 107\nfee 10\nshow\nextract 0\nend\n======== EXPECT\n$init 107\n$fee 10\n$show\naccount:107 balance:-10\n$extract 0\n 0:  opening:    0:    0\n 1:      fee:  -10:  -10\n$end\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {
        "ts": [
            {
                "name": "shell.ts",
                "contents": "const input = () => \"\"; // MODO_TESTE\nexport { };\n\nfunction main() {\n\n    while (true) {\n        let line = input();\n        console.log(\"$\" + line);\n        let args = line.split(\" \");\n\n        if (args[0] == \"end\") {\n            break;\n        } else if (args[0] == \"init\") {\n            const id = parseInt(args[1]);\n        } else if (args[0] == \"show\") {\n        } else if (args[0] == \"withdraw\") {\n            const value = parseInt(args[1]);\n        } else if (args[0] == \"fee\") {\n            const value = parseInt(args[1]);\n        } else if (args[0] == \"reverse\") {\n            for (let i = 1; i < args.length; i++) {\n            }\n        } else if (args[0] == \"deposit\") {\n            const value = parseInt(args[1]);\n        } else if (args[0] == \"extract\") {\n            const qtdOp = parseInt(args[1]);\n        } else {\n            console.log(\"fail: invalid command\");\n        }\n    }\n}\n\nmain();\n",
                "type": "show"
            }
        ],
        "java": [
            {
                "name": "Shell.java",
                "contents": "import java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\nimport java.util.stream.Collectors;\n\n\npublic class Shell{\n    public static void main(String[] _args) {\n        while (true) {\n            var line = scanner.nextLine();\n            var args = line.split(\" \");\n            var cmd = args[0];\n            System.out.println(\"$\" + line);\n\n            if (cmd.equals(\"end\")) {\n                break;\n            } else if (cmd.equals(\"show\")) {\n            } else if (cmd.equals(\"init\")) {\n                // var id = Integer.parseInt(args[1]);\n            } else if (cmd.equals(\"withdraw\")) {\n                // var value = Integer.parseInt(args[1]);\n            } else if (cmd.equals(\"fee\")) {\n                // var value = Integer.parseInt(args[1]);\n            } else if (cmd.equals(\"deposit\")) {\n                // var value = Integer.parseInt(args[1]);\n            } else if (cmd.equals(\"reverse\")) {\n                // for (int i = 1; i < args.length; i++) {\n                //     var index = Integer.parseInt(args[i]);\n                // }\n            } else if (cmd.equals(\"extract\")) {\n                // var qtdOp = Integer.parseInt(args[1]);\n            }\n            else {\n                System.out.println(\"fail: comando invalido\");\n            }\n        }\n    }\n\n    static Scanner scanner = new Scanner(System.in);\n}\n",
                "type": "show"
            }
        ],
        "cpp": [
            {
                "name": "shell.cpp",
                "contents": "#include <iostream>\n#include <vector>\n#include <sstream>\n#include <iomanip>\nusing namespace std;\n\ntemplate<typename CONTAINER, typename FUNC>\nstring join(const CONTAINER& cont, FUNC func, const string& delim) {\n    stringstream ss;\n    for (auto it = cont.begin(); it != cont.end(); it++) {\n        ss << (it == cont.begin() ? \"\" : delim) << func(*it);\n    }\n    return ss.str();\n}\n\nint main() {\n    \n    while(true) {\n        string line, cmd;\n        getline(cin, line);\n        cout << \"$\" << line << endl;\n\n        stringstream ss(line);\n        ss >> cmd;\n\n        \n        if (cmd == \"end\") {\n            break;\n        }\n        else if (cmd == \"init\") {\n            // int number{};\n            // ss >> number;\n        }\n        else if (cmd == \"show\") {\n            // TODO\n        }\n        else if (cmd == \"deposit\") {\n            // float value{};\n            // ss >> value;\n        }\n        else if (cmd == \"withdraw\") {\n            // float value{};\n            // ss >> value;\n        }\n        else if (cmd == \"fee\") {\n            // float value{};\n            // ss >> value;\n        }\n        else if (cmd == \"extract\") {\n            // int qtd{};\n            // ss >> qtd;\n        }\n        else if (cmd == \"reverse\") {\n            // int index{};\n            // while(ss >> index) {\n            // }\n        }\n        else {\n            cout << \"fail: invalid command\\n\";\n        }\n    }\n    return 0;\n}\n",
                "type": "show"
            }
        ]
    }
}
