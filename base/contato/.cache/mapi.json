{
    "title": "@contato: Gerenciando telefones de um \u00fanico contato",
    "description": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>@contato: Gerenciando telefones de um \u00fanico contato</title>\n    <style>\n        body { font-family: sans-serif; line-height: 1.6; margin: 20px; }\n        pre { background-color: #f4f4f4; padding: 10px; border-radius: 5px; overflow-x: auto; }\n        code { font-family: monospace; }\n        table { border-collapse: collapse; width: 100%; }\n        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n        th { background-color: #f2f2f2; }\n        /* Estilos b\u00e1sicos para o destaque de sintaxe (gerado pelo pygments via pymdownx.highlight) */\n        .highlight .hll { background-color: #ffffcc }\n        .highlight .c { color: #999988; font-style: italic } /* Comment */\n        .highlight .err { color: #a61717; background-color: #e3d2d2 } /* Error */\n        .highlight .k { color: #000000; font-weight: bold } /* Keyword */\n        .highlight .o { color: #000000; font-weight: bold } /* Operator */\n        .highlight .ch { color: #999988; font-style: italic } /* Comment.Hashbang */\n        .highlight .cm { color: #999988; font-style: italic } /* Comment.Multiline */\n        .highlight .cp { color: #999999; font-weight: bold; font-style: italic } /* Comment.Preproc */\n        .highlight .cpf { color: #999988; font-style: italic } /* Comment.PreprocFile */\n        .highlight .c1 { color: #999988; font-style: italic } /* Comment.Single */\n        .highlight .cs { color: #999999; font-weight: bold; font-style: italic } /* Comment.Special */\n        .highlight .gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */\n        .highlight .ge { color: #000000; font-style: italic } /* Generic.Emph */\n        .highlight .gr { color: #aa0000 } /* Generic.Error */\n        .highlight .gh { color: #999999 } /* Generic.Heading */\n        .highlight .gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */\n        .highlight .go { color: #888888 } /* Generic.Output */\n        .highlight .gp { color: #555555 } /* Generic.Prompt */\n        .highlight .gs { font-weight: bold } /* Generic.Strong */\n        .highlight .gu { color: #aaaaaa } /* Generic.Subheading */\n        .highlight .gt { color: #aa0000 } /* Generic.Traceback */\n        .highlight .kc { color: #000000; font-weight: bold } /* Keyword.Constant */\n        .highlight .kd { color: #000000; font-weight: bold } /* Keyword.Declaration */\n        .highlight .kn { color: #000000; font-weight: bold } /* Keyword.Namespace */\n        .highlight .kp { color: #000000; font-weight: bold } /* Keyword.Pseudo */\n        .highlight .kr { color: #000000; font-weight: bold } /* Keyword.Reserved */\n        .highlight .kt { color: #445588; font-weight: bold } /* Keyword.Type */\n        .highlight .m { color: #009999 } /* Literal.Number */\n        .highlight .s { color: #dd1144 } /* Literal.String */\n        .highlight .na { color: #008080 } /* Name.Attribute */\n        .highlight .nb { color: #0086B3 } /* Name.Builtin */\n        .highlight .nc { color: #445588; font-weight: bold } /* Name.Class */\n        .highlight .no { color: #008080 } /* Name.Constant */\n        .highlight .nd { color: #3c5d5d; font-weight: bold } /* Name.Decorator */\n        .highlight .ni { color: #800080 } /* Name.Entity */\n        .highlight .ne { color: #990000; font-weight: bold } /* Name.Exception */\n        .highlight .nf { color: #990000; font-weight: bold } /* Name.Function */\n        .highlight .nl { color: #990000; font-weight: bold } /* Name.Label */\n        .highlight .nn { color: #555555; font-weight: bold } /* Name.Namespace */\n        .highlight .nx { color: #990000; font-weight: bold } /* Name.Other */\n        .highlight .py { color: #009999 } /* Name.Property */\n        .highlight .p { color: #000000 } /* Name.Punctuation */\n        .highlight .nv { color: #008080 } /* Name.Variable */\n        .highlight .ow { color: #000000; font-weight: bold } /* Operator.Word */\n        .highlight .w { color: #bbbbbb } /* Text.Whitespace */\n        .highlight .mf { color: #009999 } /* Literal.Number.Float */\n        .highlight .mh { color: #009999 } /* Literal.Number.Hex */\n        .highlight .mi { color: #009999 } /* Literal.Number.Integer */\n        .highlight .mo { color: #009999 } /* Literal.Number.Oct */\n        .highlight .sb { color: #dd1144 } /* Literal.String.Backtick */\n        .highlight .sc { color: #dd1144 } /* Literal.String.Char */\n        .highlight .sd { color: #dd1144 } /* Literal.String.Doc */\n        .highlight .s2 { color: #dd1144 } /* Literal.String.Double */\n        .highlight .se { color: #dd1144 } /* Literal.String.Escape */\n        .highlight .sh { color: #dd1144 } /* Literal.String.Heredoc */\n        .highlight .si { color: #dd1144 } /* Literal.String.Interpol */\n        .highlight .sx { color: #dd1144 } /* Literal.String.Other */\n        .highlight .sr { color: #009926 } /* Literal.String.Regex */\n        .highlight .s1 { color: #dd1144 } /* Literal.String.Single */\n        .highlight .ss { color: #dd1144 } /* Literal.String.Symbol */\n        .highlight .bp { color: #0086B3 } /* Name.Builtin.Pseudo */\n        .highlight .vc { color: #008080 } /* Name.Variable.Class */\n        .highlight .vg { color: #008080 } /* Name.Variable.Global */\n        .highlight .vi { color: #008080 } /* Name.Variable.Instance */\n        .highlight .il { color: #009999 } /* Literal.Number.Integer.Long */\n    </style>\n    <script type=\"text/javascript\" async\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML\">\n    </script>\n</head>\n<body>\n<h1>Gerenciando telefones de um \u00fanico contato</h1>\n<!-- toch -->\n<table>\n<thead>\n<tr>\n<th><a href=\"#intro\">Intro</a></th>\n<th><a href=\"#guide\">Guide</a></th>\n<th><a href=\"#shell\">Shell</a></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<!-- toch -->\n\n<p><img alt=\"cover\" src=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/contato/cover.jpg\" /></p>\n<p>O objetivo dessa atividade \u00e9 implementar uma classe respons\u00e1vel por guardar um <strong>\u00fanico</strong> contato da agenda telef\u00f4nica do seu celular. Cada contato pode ter v\u00e1rios telefones.</p>\n<p>Essa classe Contact ser\u00e1 reutilizada nas atividades @agenda.</p>\n<h2>Intro</h2>\n<p>Seu programa deve:</p>\n<ul>\n<li><strong>Definir nome</strong><ul>\n<li>Poder inicializar o contato passando o nome.<ul>\n<li>Se j\u00e1 houver contato, inicie um novo contato.</li>\n<li>Se n\u00e3o houver nome, o nome default \u00e9 \"\".</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>Inserir telefones no contato</strong><ul>\n<li>Um telefone tem um label e um fone.</li>\n<li>Labels ser\u00e3o nomes como: casa, fixo, oi.</li>\n<li>Labels podem ser duplicados.</li>\n</ul>\n</li>\n</ul>\n<div class=\"language-sh highlight\"><pre><span></span><code><span class=\"c1\"># Exemplo de sa\u00edda</span>\n-<span class=\"w\"> </span>ana<span class=\"w\"> </span><span class=\"o\">[</span>tim:3434,<span class=\"w\"> </span>casa:4567,<span class=\"w\"> </span>oi:8754,<span class=\"w\"> </span>casa:4567,<span class=\"w\"> </span>oi:8754<span class=\"o\">]</span>\n</code></pre></div>\n<ul>\n<li><strong>Remover telefones do contato.</strong><ul>\n<li>Remove os telefones pelo \u00edndice.</li>\n</ul>\n</li>\n<li><strong>Validando os n\u00fameros de telefone.</strong><ul>\n<li>Processe os telefones para apenas permitir nos telefones os seguintes caracteres \"0123456789().\"</li>\n<li>Se o usu\u00e1rio tentar inserir individualmente um telefone invalido, avise e n\u00e3o insira o telefone.</li>\n</ul>\n</li>\n<li><strong>Favoritar e desfavoritar contato</strong></li>\n<li><strong>Mostrar contato</strong><ul>\n<li>Mostrar o contato com todos os telefones.</li>\n<li>Se ele for favoritado, mostre um @ no come\u00e7o do nome.</li>\n</ul>\n</li>\n</ul>\n<hr />\n<h2>Guide</h2>\n<p><img alt=\"diagrama\" src=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/contato/diagrama.png\" /></p>\n<p><a href=\"https://youtu.be/jqNToRuOQhg?si=xn0CV6dPfEp11KG0\"><img alt=\"youtube icon\" src=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/contato/../youguide.png\" /></a></p>\n<!-- links .cache/draft -->\n<ul>\n<li>cpp<ul>\n<li><a href=\"https://github.com/qxcodepoo/arcade/blob/master/base/contato/.cache/draft/cpp/shell.cpp\">shell.cpp</a></li>\n</ul>\n</li>\n<li>java<ul>\n<li><a href=\"https://github.com/qxcodepoo/arcade/blob/master/base/contato/.cache/draft/java/Shell.java\">Shell.java</a></li>\n</ul>\n</li>\n<li>ts<ul>\n<li><a href=\"https://github.com/qxcodepoo/arcade/blob/master/base/contato/.cache/draft/ts/shell.ts\">shell.ts</a></li>\n</ul>\n</li>\n</ul>\n<!-- links -->\n\n<hr />\n<h2>Shell</h2>\n<div class=\"language-bash highlight\"><pre><span></span><code><span class=\"c1\">#TEST_CASE definindo nome</span>\n<span class=\"nv\">$init</span><span class=\"w\"> </span>david\n<span class=\"nv\">$show</span>\n-<span class=\"w\"> </span>david<span class=\"w\"> </span><span class=\"o\">[]</span>\n\n<span class=\"c1\">#TEST_CASE inserindo telefones</span>\n<span class=\"nv\">$add</span><span class=\"w\"> </span>oi<span class=\"w\"> </span><span class=\"m\">88</span>\n<span class=\"nv\">$add</span><span class=\"w\"> </span>tim<span class=\"w\"> </span><span class=\"m\">99</span>\n<span class=\"nv\">$add</span><span class=\"w\"> </span>tim<span class=\"w\"> </span><span class=\"m\">98</span>\n<span class=\"nv\">$add</span><span class=\"w\"> </span>vivo<span class=\"w\"> </span><span class=\"m\">83</span>\n<span class=\"nv\">$show</span>\n-<span class=\"w\"> </span>david<span class=\"w\"> </span><span class=\"o\">[</span>oi:88,<span class=\"w\"> </span>tim:99,<span class=\"w\"> </span>tim:98,<span class=\"w\"> </span>vivo:83<span class=\"o\">]</span>\n\n<span class=\"c1\">#TEST_CASE removendo telefone por indice</span>\n<span class=\"nv\">$rm</span><span class=\"w\"> </span><span class=\"m\">2</span>\n<span class=\"nv\">$show</span>\n-<span class=\"w\"> </span>david<span class=\"w\"> </span><span class=\"o\">[</span>oi:88,<span class=\"w\"> </span>tim:99,<span class=\"w\"> </span>vivo:83<span class=\"o\">]</span>\n<span class=\"nv\">$rm</span><span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"nv\">$show</span>\n-<span class=\"w\"> </span>david<span class=\"w\"> </span><span class=\"o\">[</span>tim:99,<span class=\"w\"> </span>vivo:83<span class=\"o\">]</span>\n\n<span class=\"c1\">#TEST_CASE validando numero de fone</span>\n<span class=\"nv\">$add</span><span class=\"w\"> </span>tim<span class=\"w\"> </span>9a9\nfail:<span class=\"w\"> </span>invalid<span class=\"w\"> </span>number\n<span class=\"nv\">$add</span><span class=\"w\"> </span>tim<span class=\"w\"> </span><span class=\"o\">(</span><span class=\"m\">85</span><span class=\"o\">)</span><span class=\"m\">99</span>.99\n<span class=\"nv\">$show</span>\n-<span class=\"w\"> </span>david<span class=\"w\"> </span><span class=\"o\">[</span>tim:99,<span class=\"w\"> </span>vivo:83,<span class=\"w\"> </span>tim:<span class=\"o\">(</span><span class=\"m\">85</span><span class=\"o\">)</span><span class=\"m\">99</span>.99<span class=\"o\">]</span>\n\n<span class=\"c1\">#TEST_CASE favoritos</span>\n<span class=\"nv\">$tfav</span>\n<span class=\"nv\">$show</span>\n@<span class=\"w\"> </span>david<span class=\"w\"> </span><span class=\"o\">[</span>tim:99,<span class=\"w\"> </span>vivo:83,<span class=\"w\"> </span>tim:<span class=\"o\">(</span><span class=\"m\">85</span><span class=\"o\">)</span><span class=\"m\">99</span>.99<span class=\"o\">]</span>\n\n<span class=\"nv\">$tfav</span>\n<span class=\"nv\">$show</span>\n-<span class=\"w\"> </span>david<span class=\"w\"> </span><span class=\"o\">[</span>tim:99,<span class=\"w\"> </span>vivo:83,<span class=\"w\"> </span>tim:<span class=\"o\">(</span><span class=\"m\">85</span><span class=\"o\">)</span><span class=\"m\">99</span>.99<span class=\"o\">]</span>\n\n\n<span class=\"nv\">$end</span>\n<span class=\"c1\">#__end__</span>\n</code></pre></div>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT definindo nome\ninit david\nshow\nend\n======== EXPECT\n$init david\n$show\n- david []\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT inserindo telefones\ninit david\nshow\nadd oi 88\nadd tim 99\nadd tim 98\nadd vivo 83\nshow\nend\n======== EXPECT\n$init david\n$show\n- david []\n$add oi 88\n$add tim 99\n$add tim 98\n$add vivo 83\n$show\n- david [oi:88, tim:99, tim:98, vivo:83]\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT removendo telefone por indice\ninit david\nshow\nadd oi 88\nadd tim 99\nadd tim 98\nadd vivo 83\nshow\nrm 2\nshow\nrm 0\nshow\nend\n======== EXPECT\n$init david\n$show\n- david []\n$add oi 88\n$add tim 99\n$add tim 98\n$add vivo 83\n$show\n- david [oi:88, tim:99, tim:98, vivo:83]\n$rm 2\n$show\n- david [oi:88, tim:99, vivo:83]\n$rm 0\n$show\n- david [tim:99, vivo:83]\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT validando numero de fone\ninit david\nshow\nadd oi 88\nadd tim 99\nadd tim 98\nadd vivo 83\nshow\nrm 2\nshow\nrm 0\nshow\nadd tim 9a9\nadd tim (85)99.99\nshow\nend\n======== EXPECT\n$init david\n$show\n- david []\n$add oi 88\n$add tim 99\n$add tim 98\n$add vivo 83\n$show\n- david [oi:88, tim:99, tim:98, vivo:83]\n$rm 2\n$show\n- david [oi:88, tim:99, vivo:83]\n$rm 0\n$show\n- david [tim:99, vivo:83]\n$add tim 9a9\nfail: invalid number\n$add tim (85)99.99\n$show\n- david [tim:99, vivo:83, tim:(85)99.99]\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT favoritos\ninit david\nshow\nadd oi 88\nadd tim 99\nadd tim 98\nadd vivo 83\nshow\nrm 2\nshow\nrm 0\nshow\nadd tim 9a9\nadd tim (85)99.99\nshow\ntfav\nshow\ntfav\nshow\nend\n======== EXPECT\n$init david\n$show\n- david []\n$add oi 88\n$add tim 99\n$add tim 98\n$add vivo 83\n$show\n- david [oi:88, tim:99, tim:98, vivo:83]\n$rm 2\n$show\n- david [oi:88, tim:99, vivo:83]\n$rm 0\n$show\n- david [tim:99, vivo:83]\n$add tim 9a9\nfail: invalid number\n$add tim (85)99.99\n$show\n- david [tim:99, vivo:83, tim:(85)99.99]\n$tfav\n$show\n@ david [tim:99, vivo:83, tim:(85)99.99]\n$tfav\n$show\n- david [tim:99, vivo:83, tim:(85)99.99]\n$end\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {
        "ts": [
            {
                "name": "shell.ts",
                "contents": "const input = () => \"\"; // MODO_TESTE\nexport {};\n\n\nfunction main() {\n    while (true) {\n        let line = input();\n        console.log(\"$\" + line);\n        const args = line.split(\" \");\n        const cmd = args[0];\n        \n        if (cmd === \"end\") {\n            break;\n        } else if (cmd === \"init\") {\n            const name = args[1];\n        } else if (cmd === \"add\") {\n            const id = args[1];\n            const number = args[2];\n        } else if (cmd === \"rm\") {\n            const index = +args[1];\n        } else if (cmd === \"tfav\") {\n        } else if (cmd === \"show\") {\n        } else {\n            console.log(\"fail: comando invalido\");\n        }\n    }\n}\n\nmain();\n",
                "type": "show"
            }
        ],
        "java": [
            {
                "name": "Shell.java",
                "contents": "import java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\nimport java.util.stream.Collectors;\nimport java.util.Collections;\n\npublic class Shell{\n\n    public static void main(String[] Args) {\n        while (true) {\n            String line = scanner.nextLine();\n            System.out.println(\"$\" + line);\n            String[] args = line.split(\" \");\n            \n            if (args[0].equals(\"end\")) {\n                break;\n            }\n            else if (args[0].equals(\"init\")) {\n                // var name = args[1];\n            }\n            else if (args[0].equals(\"show\")) {\n            }\n            else if (args[0].equals(\"add\")) {\n                // var id = args[1];\n                // var number = args[2];\n            }\n            else if (args[0].equals(\"rm\")) {\n                // var index = Integer.parseInt(args[1]);\n            }\n            else if (args[0].equals(\"tfav\")) {\n            }\n            else {\n                System.out.println(\"fail: invalid command\");\n            }\n        }\n    }\n    static Scanner scanner = new Scanner(System.in);\n}\n",
                "type": "show"
            }
        ],
        "cpp": [
            {
                "name": "shell.cpp",
                "contents": "#include <iostream>\n#include <sstream>\n#include <vector>\n#include <iomanip>\n#include <sstream>\n\nusing namespace std;\n\ntemplate <class CONTAINER, class FUNC>\nstring map_join(const CONTAINER &cont, FUNC func, string sep = \" \")\n{\n    stringstream ss;\n    for (auto it = cont.begin(); it != cont.end(); it++)\n    {\n        ss << (it == cont.begin() ? \"\" : sep) << func(*it);\n    }\n    return ss.str();\n}\nint main()\n{\n    while (true)\n    {\n        string line, cmd;\n        getline(cin, line);\n        cout << \"$\" << line << endl;\n        stringstream ss(line);\n        ss >> cmd;\n\n        if (cmd == \"end\")\n        {\n            break;\n        }\n        else if (cmd == \"init\")\n        {\n            // string name;\n            // ss >> name;\n        }\n        else if (cmd == \"add\")\n        {\n            // string id, number;\n            // ss >> id >> number;\n        }\n        else if (cmd == \"rm\")\n        {\n            // int index{};\n            // ss >> index;\n        }\n        else if (cmd == \"tfav\")\n        {\n        }\n        else if (cmd == \"show\")\n        {\n        }\n        else\n        {\n            cout << \"fail: comando invalido\" << endl;\n        }\n    }\n}\n",
                "type": "show"
            }
        ]
    }
}
