{
    "title": "@estacionamento: Cobrando o valor de carros e motos",
    "description": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>@estacionamento: Cobrando o valor de carros e motos</title>\n    <style>\n        body { font-family: sans-serif; line-height: 1.6; margin: 20px; }\n        pre { background-color: #f4f4f4; padding: 10px; border-radius: 5px; overflow-x: auto; }\n        code { font-family: monospace; }\n        table { border-collapse: collapse; width: 100%; }\n        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n        th { background-color: #f2f2f2; }\n        /* Estilos b\u00e1sicos para o destaque de sintaxe (gerado pelo pygments via pymdownx.highlight) */\n        .highlight .hll { background-color: #ffffcc }\n        .highlight .c { color: #999988; font-style: italic } /* Comment */\n        .highlight .err { color: #a61717; background-color: #e3d2d2 } /* Error */\n        .highlight .k { color: #000000; font-weight: bold } /* Keyword */\n        .highlight .o { color: #000000; font-weight: bold } /* Operator */\n        .highlight .ch { color: #999988; font-style: italic } /* Comment.Hashbang */\n        .highlight .cm { color: #999988; font-style: italic } /* Comment.Multiline */\n        .highlight .cp { color: #999999; font-weight: bold; font-style: italic } /* Comment.Preproc */\n        .highlight .cpf { color: #999988; font-style: italic } /* Comment.PreprocFile */\n        .highlight .c1 { color: #999988; font-style: italic } /* Comment.Single */\n        .highlight .cs { color: #999999; font-weight: bold; font-style: italic } /* Comment.Special */\n        .highlight .gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */\n        .highlight .ge { color: #000000; font-style: italic } /* Generic.Emph */\n        .highlight .gr { color: #aa0000 } /* Generic.Error */\n        .highlight .gh { color: #999999 } /* Generic.Heading */\n        .highlight .gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */\n        .highlight .go { color: #888888 } /* Generic.Output */\n        .highlight .gp { color: #555555 } /* Generic.Prompt */\n        .highlight .gs { font-weight: bold } /* Generic.Strong */\n        .highlight .gu { color: #aaaaaa } /* Generic.Subheading */\n        .highlight .gt { color: #aa0000 } /* Generic.Traceback */\n        .highlight .kc { color: #000000; font-weight: bold } /* Keyword.Constant */\n        .highlight .kd { color: #000000; font-weight: bold } /* Keyword.Declaration */\n        .highlight .kn { color: #000000; font-weight: bold } /* Keyword.Namespace */\n        .highlight .kp { color: #000000; font-weight: bold } /* Keyword.Pseudo */\n        .highlight .kr { color: #000000; font-weight: bold } /* Keyword.Reserved */\n        .highlight .kt { color: #445588; font-weight: bold } /* Keyword.Type */\n        .highlight .m { color: #009999 } /* Literal.Number */\n        .highlight .s { color: #dd1144 } /* Literal.String */\n        .highlight .na { color: #008080 } /* Name.Attribute */\n        .highlight .nb { color: #0086B3 } /* Name.Builtin */\n        .highlight .nc { color: #445588; font-weight: bold } /* Name.Class */\n        .highlight .no { color: #008080 } /* Name.Constant */\n        .highlight .nd { color: #3c5d5d; font-weight: bold } /* Name.Decorator */\n        .highlight .ni { color: #800080 } /* Name.Entity */\n        .highlight .ne { color: #990000; font-weight: bold } /* Name.Exception */\n        .highlight .nf { color: #990000; font-weight: bold } /* Name.Function */\n        .highlight .nl { color: #990000; font-weight: bold } /* Name.Label */\n        .highlight .nn { color: #555555; font-weight: bold } /* Name.Namespace */\n        .highlight .nx { color: #990000; font-weight: bold } /* Name.Other */\n        .highlight .py { color: #009999 } /* Name.Property */\n        .highlight .p { color: #000000 } /* Name.Punctuation */\n        .highlight .nv { color: #008080 } /* Name.Variable */\n        .highlight .ow { color: #000000; font-weight: bold } /* Operator.Word */\n        .highlight .w { color: #bbbbbb } /* Text.Whitespace */\n        .highlight .mf { color: #009999 } /* Literal.Number.Float */\n        .highlight .mh { color: #009999 } /* Literal.Number.Hex */\n        .highlight .mi { color: #009999 } /* Literal.Number.Integer */\n        .highlight .mo { color: #009999 } /* Literal.Number.Oct */\n        .highlight .sb { color: #dd1144 } /* Literal.String.Backtick */\n        .highlight .sc { color: #dd1144 } /* Literal.String.Char */\n        .highlight .sd { color: #dd1144 } /* Literal.String.Doc */\n        .highlight .s2 { color: #dd1144 } /* Literal.String.Double */\n        .highlight .se { color: #dd1144 } /* Literal.String.Escape */\n        .highlight .sh { color: #dd1144 } /* Literal.String.Heredoc */\n        .highlight .si { color: #dd1144 } /* Literal.String.Interpol */\n        .highlight .sx { color: #dd1144 } /* Literal.String.Other */\n        .highlight .sr { color: #009926 } /* Literal.String.Regex */\n        .highlight .s1 { color: #dd1144 } /* Literal.String.Single */\n        .highlight .ss { color: #dd1144 } /* Literal.String.Symbol */\n        .highlight .bp { color: #0086B3 } /* Name.Builtin.Pseudo */\n        .highlight .vc { color: #008080 } /* Name.Variable.Class */\n        .highlight .vg { color: #008080 } /* Name.Variable.Global */\n        .highlight .vi { color: #008080 } /* Name.Variable.Instance */\n        .highlight .il { color: #009999 } /* Literal.Number.Integer.Long */\n    </style>\n    <script type=\"text/javascript\" async\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML\">\n    </script>\n</head>\n<body>\n<h1>Cobrando o valor de carros e motos</h1>\n<!-- toch -->\n<table>\n<thead>\n<tr>\n<th><a href=\"#intro\">Intro</a></th>\n<th><a href=\"#guide\">Guide</a></th>\n<th><a href=\"#shell\">Shell</a></th>\n<th><a href=\"#draft\">Draft</a></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<!-- toch -->\n\n<p><img alt=\"_\" src=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/estacionamento/cover.jpg\" /></p>\n<h2>Intro</h2>\n<p>O sistema de estacionamento \u00e9 respons\u00e1vel por gerenciar ve\u00edculos em um estacionamento, registrando a entrada e sa\u00edda de ve\u00edculos, calculando o valor a ser pago pelo tempo de perman\u00eancia e fornecendo informa\u00e7\u00f5es sobre os ve\u00edculos estacionados.</p>\n<ul>\n<li>Voc\u00ea deve utilizar heran\u00e7a para construir um sistema para gerenciar um estacionamento de bicicletas, carros e motos.</li>\n<li>A classe Ve\u00edculo \u00e9 uma classe abstrata que possui os atributos <code>id</code>, <code>entrada</code> e <code>tipo</code>.</li>\n<li>A classe Ve\u00edculo possui um m\u00e9todo abstrato <code>calcularValor()</code> que deve ser implementado pelas classes filhas.</li>\n<li>A classe Ve\u00edculo possui um m\u00e9todo <code>toString()</code>.</li>\n</ul>\n<h3>Responsabilidades</h3>\n<ul>\n<li>\n<p><strong>Registrar Entrada de Ve\u00edculo:</strong></p>\n<ul>\n<li>O sistema deve permitir que novos ve\u00edculos entrem no estacionamento, registrando o tipo de ve\u00edculo e seu identificador.</li>\n<li>O tempo de entrada do ve\u00edculo deve ser registrado.</li>\n</ul>\n</li>\n<li>\n<p><strong>Registrar Sa\u00edda de Ve\u00edculo:</strong></p>\n<ul>\n<li>O sistema deve permitir que ve\u00edculos saiam do estacionamento, registrando o tempo de sa\u00edda do ve\u00edculo.</li>\n<li>Com base no tempo de entrada e sa\u00edda, o sistema deve calcular o valor a ser pago pelo estacionamento.</li>\n</ul>\n</li>\n<li>\n<p><strong>Calcular Valor a Pagar:</strong></p>\n<ul>\n<li>O valor a ser pago pelo estacionamento \u00e9 calculado com base no tipo de ve\u00edculo estacionado e no tempo de perman\u00eancia.</li>\n<li>O c\u00e1lculo do valor varia de acordo com o tipo de ve\u00edculo:<ul>\n<li><strong>Bike:</strong> paga R$3 fixos.</li>\n<li><strong>Moto:</strong> paga o valor em minutos dividido por 20.</li>\n<li><strong>Carro:</strong> paga o valor em minutos dividido por 10, mas o valor m\u00ednimo \u00e9 5.00.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Obter Lista de Ve\u00edculos Estacionados:</strong></p>\n<ul>\n<li>O sistema deve ser capaz de fornecer uma lista de todos os ve\u00edculos atualmente estacionados, incluindo o tipo de ve\u00edculo, identificador e tempo de entrada.</li>\n</ul>\n</li>\n</ul>\n<h2>Guide</h2>\n<p><a href=\"https://youtu.be/PBabGC5nlPE?si=NgkxkLArCDVx52fJ\"><img alt=\"youtube icon\" src=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/estacionamento/../yousolver.png\" /></a></p>\n<p><img alt=\"_\" src=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/estacionamento/diagrama.png\" /></p>\n<p>Voc\u00ea pode controlar o alinhamento e preenchimento com \"_\" que o m\u00e9todo <code>toString()</code> deve retornar assim.</p>\n<div class=\"language-cpp highlight\"><pre><span></span><code><span class=\"c1\">//cpp</span>\n<span class=\"k\">virtual</span><span class=\"w\"> </span><span class=\"n\">string</span><span class=\"w\"> </span><span class=\"nf\">toString</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">stringstream</span><span class=\"w\"> </span><span class=\"n\">ss</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">ss</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">setw</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">setfill</span><span class=\"p\">(</span><span class=\"sc\">&#39;_&#39;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\">  </span><span class=\"n\">tipo</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">&quot; : &quot;</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">setw</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">setfill</span><span class=\"p\">(</span><span class=\"sc\">&#39;_&#39;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">id</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">&quot; : &quot;</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">entrada</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">ss</span><span class=\"p\">.</span><span class=\"n\">str</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<div class=\"language-java highlight\"><pre><span></span><code><span class=\"c1\">//java</span>\n<span class=\"c1\">//Em java n\u00e3o existe m\u00e9todo de alinhamento que permite escolher o caracter de preenchimento</span>\n<span class=\"c1\">//Ent\u00e3o vamos fazer uma adapta\u00e7\u00e3o</span>\n<span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"nf\">toString</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"p\">.</span><span class=\"na\">format</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"s\">&quot;%10s-:-%10s-:-%s&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"c1\">//alinhar a direita 10 caracteres inserindo espa\u00e7os</span>\n<span class=\"w\">        </span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"na\">tipo</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"na\">id</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"na\">horaEntrada</span>\n<span class=\"w\">    </span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"na\">replace</span><span class=\"p\">(</span><span class=\"sc\">&#39; &#39;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"sc\">&#39;_&#39;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"c1\">//substituir espa\u00e7o por underline</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"na\">replace</span><span class=\"p\">(</span><span class=\"sc\">&#39;-&#39;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"sc\">&#39; &#39;</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">//substituir h\u00edfen por espa\u00e7o</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<div class=\"language-ts highlight\"><pre><span></span><code><span class=\"c1\">//ts</span>\n<span class=\"nx\">toString</span><span class=\"p\">()</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">tipo</span><span class=\"p\">.</span><span class=\"nx\">padStart</span><span class=\"p\">(</span><span class=\"mf\">10</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">&quot;_&quot;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"s2\">&quot; : &quot;</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">id</span><span class=\"p\">.</span><span class=\"nx\">padStart</span><span class=\"p\">(</span><span class=\"mf\">10</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">&quot;_&quot;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"s2\">&quot; : &quot;</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">entrada</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h2>Shell</h2>\n<div class=\"language-sh highlight\"><pre><span></span><code><span class=\"c1\">#TEST_CASE entrada bike</span>\n<span class=\"nv\">$show</span>\nHora<span class=\"w\"> </span>atual:<span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"nv\">$tempo</span><span class=\"w\"> </span><span class=\"m\">30</span>\n<span class=\"nv\">$estacionar</span><span class=\"w\"> </span>bike<span class=\"w\"> </span>elias\n<span class=\"nv\">$show</span>\n______Bike<span class=\"w\"> </span>:<span class=\"w\"> </span>_____elias<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">30</span>\nHora<span class=\"w\"> </span>atual:<span class=\"w\"> </span><span class=\"m\">30</span>\n\n<span class=\"c1\">#TEST_CASE entrada moto</span>\n<span class=\"nv\">$tempo</span><span class=\"w\"> </span><span class=\"m\">20</span>\n<span class=\"nv\">$estacionar</span><span class=\"w\"> </span>moto<span class=\"w\"> </span>abc1234\n<span class=\"nv\">$show</span>\n______Bike<span class=\"w\"> </span>:<span class=\"w\"> </span>_____elias<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">30</span>\n______Moto<span class=\"w\"> </span>:<span class=\"w\"> </span>___abc1234<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">50</span>\nHora<span class=\"w\"> </span>atual:<span class=\"w\"> </span><span class=\"m\">50</span>\n<span class=\"c1\">#TEST_CASE entrada carro</span>\n<span class=\"nv\">$tempo</span><span class=\"w\"> </span><span class=\"m\">50</span>\n<span class=\"nv\">$estacionar</span><span class=\"w\"> </span>carro<span class=\"w\"> </span>pog1000\n<span class=\"nv\">$show</span>\n______Bike<span class=\"w\"> </span>:<span class=\"w\"> </span>_____elias<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">30</span>\n______Moto<span class=\"w\"> </span>:<span class=\"w\"> </span>___abc1234<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">50</span>\n_____Carro<span class=\"w\"> </span>:<span class=\"w\"> </span>___pog1000<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">100</span>\nHora<span class=\"w\"> </span>atual:<span class=\"w\"> </span><span class=\"m\">100</span>\n<span class=\"nv\">$tempo</span><span class=\"w\"> </span><span class=\"m\">100</span>\n<span class=\"nv\">$estacionar</span><span class=\"w\"> </span>carro<span class=\"w\"> </span>uva9999\n<span class=\"nv\">$tempo</span><span class=\"w\"> </span><span class=\"m\">30</span>\n<span class=\"nv\">$show</span>\n______Bike<span class=\"w\"> </span>:<span class=\"w\"> </span>_____elias<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">30</span>\n______Moto<span class=\"w\"> </span>:<span class=\"w\"> </span>___abc1234<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">50</span>\n_____Carro<span class=\"w\"> </span>:<span class=\"w\"> </span>___pog1000<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">100</span>\n_____Carro<span class=\"w\"> </span>:<span class=\"w\"> </span>___uva9999<span class=\"w\"> </span>:<span class=\"w\"> </span><span class=\"m\">200</span>\nHora<span class=\"w\"> </span>atual:<span class=\"w\"> </span><span class=\"m\">230</span>\n\n<span class=\"c1\">#TEST_CASE saida</span>\n<span class=\"nv\">$pagar</span><span class=\"w\"> </span>elias\nBike<span class=\"w\"> </span>chegou<span class=\"w\"> </span><span class=\"m\">30</span><span class=\"w\"> </span>saiu<span class=\"w\"> </span><span class=\"m\">230</span>.<span class=\"w\"> </span>Pagar<span class=\"w\"> </span>R$<span class=\"w\"> </span><span class=\"m\">3</span>.00\n<span class=\"nv\">$pagar</span><span class=\"w\"> </span>abc1234\nMoto<span class=\"w\"> </span>chegou<span class=\"w\"> </span><span class=\"m\">50</span><span class=\"w\"> </span>saiu<span class=\"w\"> </span><span class=\"m\">230</span>.<span class=\"w\"> </span>Pagar<span class=\"w\"> </span>R$<span class=\"w\"> </span><span class=\"m\">9</span>.00\n<span class=\"nv\">$pagar</span><span class=\"w\"> </span>pog1000\nCarro<span class=\"w\"> </span>chegou<span class=\"w\"> </span><span class=\"m\">100</span><span class=\"w\"> </span>saiu<span class=\"w\"> </span><span class=\"m\">230</span>.<span class=\"w\"> </span>Pagar<span class=\"w\"> </span>R$<span class=\"w\"> </span><span class=\"m\">13</span>.00\n<span class=\"nv\">$pagar</span><span class=\"w\"> </span>uva9999\nCarro<span class=\"w\"> </span>chegou<span class=\"w\"> </span><span class=\"m\">200</span><span class=\"w\"> </span>saiu<span class=\"w\"> </span><span class=\"m\">230</span>.<span class=\"w\"> </span>Pagar<span class=\"w\"> </span>R$<span class=\"w\"> </span><span class=\"m\">5</span>.00\n<span class=\"nv\">$end</span>\n</code></pre></div>\n<h2>Draft</h2>\n<!-- links .cache/draft -->\n<ul>\n<li>cpp<ul>\n<li><a href=\"https://github.com/qxcodepoo/arcade/blob/master/base/estacionamento/.cache/draft/cpp/shell.cpp\">shell.cpp</a></li>\n</ul>\n</li>\n<li>java<ul>\n<li><a href=\"https://github.com/qxcodepoo/arcade/blob/master/base/estacionamento/.cache/draft/java/Shell.java\">Shell.java</a></li>\n</ul>\n</li>\n<li>ts<ul>\n<li><a href=\"https://github.com/qxcodepoo/arcade/blob/master/base/estacionamento/.cache/draft/ts/shell.ts\">shell.ts</a></li>\n</ul>\n</li>\n</ul>\n<!-- links -->\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT entrada bike\nshow\ntempo 30\nestacionar bike elias\nshow\nend\n======== EXPECT\n$show\nHora atual: 0\n$tempo 30\n$estacionar bike elias\n$show\n______Bike : _____elias : 30\nHora atual: 30\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT entrada moto\nshow\ntempo 30\nestacionar bike elias\nshow\ntempo 20\nestacionar moto abc1234\nshow\nend\n======== EXPECT\n$show\nHora atual: 0\n$tempo 30\n$estacionar bike elias\n$show\n______Bike : _____elias : 30\nHora atual: 30\n$tempo 20\n$estacionar moto abc1234\n$show\n______Bike : _____elias : 30\n______Moto : ___abc1234 : 50\nHora atual: 50\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT entrada carro\nshow\ntempo 30\nestacionar bike elias\nshow\ntempo 20\nestacionar moto abc1234\nshow\ntempo 50\nestacionar carro pog1000\nshow\ntempo 100\nestacionar carro uva9999\ntempo 30\nshow\nend\n======== EXPECT\n$show\nHora atual: 0\n$tempo 30\n$estacionar bike elias\n$show\n______Bike : _____elias : 30\nHora atual: 30\n$tempo 20\n$estacionar moto abc1234\n$show\n______Bike : _____elias : 30\n______Moto : ___abc1234 : 50\nHora atual: 50\n$tempo 50\n$estacionar carro pog1000\n$show\n______Bike : _____elias : 30\n______Moto : ___abc1234 : 50\n_____Carro : ___pog1000 : 100\nHora atual: 100\n$tempo 100\n$estacionar carro uva9999\n$tempo 30\n$show\n______Bike : _____elias : 30\n______Moto : ___abc1234 : 50\n_____Carro : ___pog1000 : 100\n_____Carro : ___uva9999 : 200\nHora atual: 230\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT saida\nshow\ntempo 30\nestacionar bike elias\nshow\ntempo 20\nestacionar moto abc1234\nshow\ntempo 50\nestacionar carro pog1000\nshow\ntempo 100\nestacionar carro uva9999\ntempo 30\nshow\npagar elias\npagar abc1234\npagar pog1000\npagar uva9999\nend\n======== EXPECT\n$show\nHora atual: 0\n$tempo 30\n$estacionar bike elias\n$show\n______Bike : _____elias : 30\nHora atual: 30\n$tempo 20\n$estacionar moto abc1234\n$show\n______Bike : _____elias : 30\n______Moto : ___abc1234 : 50\nHora atual: 50\n$tempo 50\n$estacionar carro pog1000\n$show\n______Bike : _____elias : 30\n______Moto : ___abc1234 : 50\n_____Carro : ___pog1000 : 100\nHora atual: 100\n$tempo 100\n$estacionar carro uva9999\n$tempo 30\n$show\n______Bike : _____elias : 30\n______Moto : ___abc1234 : 50\n_____Carro : ___pog1000 : 100\n_____Carro : ___uva9999 : 200\nHora atual: 230\n$pagar elias\nBike chegou 30 saiu 230. Pagar R$ 3.00\n$pagar abc1234\nMoto chegou 50 saiu 230. Pagar R$ 9.00\n$pagar pog1000\nCarro chegou 100 saiu 230. Pagar R$ 13.00\n$pagar uva9999\nCarro chegou 200 saiu 230. Pagar R$ 5.00\n$end\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {
        "ts": [
            {
                "name": "shell.ts",
                "contents": "const input = () => \"\"; // MODO_TESTE\nexport {};\n\nfunction main() {\n\n    while (true) {\n        const line = input();\n        console.log(\"$\" + line);\n\n        const args = line.split(\" \");\n        const cmd = args[0];\n\n        if (cmd === \"end\") {\n            break;\n        } else if (cmd === \"show\") {\n        } else if (cmd === \"estacionar\") {\n            // const tipo = args[1];\n            // const id = args[2];\n        } else if (cmd === \"tempo\") {\n            const tempo = +args[1];\n        } else if (cmd === \"pagar\") {\n            // CHAME OS METODOS PAGAR E SAIR\n            // const id = args[1];\n        } else {\n            console.log(\"fail: comando invalido\");\n        }\n    }\n}\n\nmain();\n",
                "type": "show"
            }
        ],
        "java": [
            {
                "name": "Shell.java",
                "contents": "import java.text.DecimalFormat;\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\n\npublic class Shell {\n\n    public static void main(String[] a) {\n        while (true) {\n            String line = scanner.nextLine();\n            System.out.println(\"$\" + line);\n\n            var par = line.split(\" \");\n            var cmd = par[0];\n\n            if (cmd.equals(\"end\")) {\n                break;\n            }\n            else if (cmd.equals(\"show\")) {\n            }\n            else if (cmd.equals(\"init\")) {\n            }\n            else if (cmd.equals(\"estacionar\")) {\n                // var veiculo = par[1];\n                // var id = par[2];\n            }\n            else if (cmd.equals(\"pagar\")) {\n                // CHAME OS METODOS DE PAGAMENTO E SAIDA\n                // var veiculo = par[1];\n            }\n            else if (cmd.equals(\"tempo\")) {\n                // var tempo = Integer.parseInt(par[1]);\n            }\n            else {\n                System.out.println(\"fail: comando inv\u00e1lido\");\n            }\n        }\n    }\n\n    private static Scanner scanner = new Scanner(System.in);\n}\n",
                "type": "show"
            }
        ],
        "cpp": [
            {
                "name": "shell.cpp",
                "contents": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <iomanip>\n\nusing namespace std;\n\nint main() {\n    \n    while (true) {\n        string line, cmd;\n        getline(cin, line);\n        cout << \"$\" << line << endl;\n\n        stringstream ss(line);\n        ss >> cmd;\n\n        if (cmd == \"end\") {\n            break;\n        } else if (cmd == \"show\") {\n        } else if (cmd == \"estacionar\") {\n            // string tipo, id;\n            // ss >> tipo >> id;\n        } else if (cmd == \"tempo\") {\n            // int tempo {};\n            // ss >> tempo;\n        } else if (cmd == \"pagar\") {\n            // string id;\n            // ss >> id;\n        } else {\n            cout << \"fail: comando invalido\" << endl;\n        }\n    }\n}\n",
                "type": "show"
            }
        ]
    }
}
